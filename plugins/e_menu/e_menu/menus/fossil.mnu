
[OPTIONS]
n=< fossil >
b1=0
b2=3
b3=1
w=45
t4==%b-%Y/%U-week
u=%s
o=0
in=1.0
pos=4.3
::FSLUSER=aplsimple
::FSLBRANCH=""
::EMENUTMPFILE=%mn.tmp~
::EMENUBRIEF=0
%C if {![info exist ::EMENUCOMMIT]} {set ::EMENUCOMMIT [set ::EMENUCOMMIT2 ""]}
%C if {![info exist ::EMENUCOMMIT1]} {set ::EMENUCOMMIT1 tip}
%C if {![info exist ::EMENUFILE]} {set ::EMENUFILE "%f"}
%C if {{%F}=={*} && ![info exist ::EMENUFILE]} {set ::EMENUFILE "*"}
%C set ::FILETAIL \"[file tail $::EMENUFILE]\"

[MENU]
 S:fossil status %PD S: cd %PD
 S:fossil status %PD S: echo %PD\ndir\necho ---\nfossil status

 S:fossil changes S: cd %PD
 S:fossil changes S: pwd\necho ---\necho --+%PD+--\ndir\necho ---\nfossil changes

 S:fossil extras S: cd %PD
 S:fossil extras S: pwd\necho ---\ndir\necho ---\nfossil extras

 R:fossil ui R: cd %PD
 R:fossil ui R: fossil ui

 R: R: 2

 R:fossil gdiff $::FILETAIL ? R: cd %PD
RW:fossil gdiff $::FILETAIL ? RW: fossil tim -t ci -n 99 > $::EMENUTMPFILE
 R:fossil gdiff $::FILETAIL ? R: %I {} "GDIFF" { \
   v_ {{} {-pady 4} {}} {} \
   fil1 {{   File:} {} {-w 70}} {"$::EMENUFILE"} \
   fco1 {{Version:} {} {-h 10 -state readonly -inpval "$::EMENUCOMMIT"}} \
     {/@-div1 "\[" -div2 "\]" -ret 1 $::EMENUTMPFILE/@    INFO: /@-div1 "\] " $::EMENUTMPFILE/@} \
   seh {{} {-pady 3} {}} {} \
   texc {{   Hint:} {} {-h 9 -w 70 -ro 1 -wrap word}} \
   {\n Select a version from the combobox to be compared to tip.\n\n If it's blank, the current file is compared to tip.\n\n No response means no differences.\n\n (temp file: $::EMENUTMPFILE)} \
   } -head {\n This will compare a selected version\n of file to its tip:} -weight bold == ::EMENUFILE ::EMENUCOMMIT
 R:fossil gdiff $::FILETAIL ? R: %C if {"$::EMENUCOMMIT" eq ""} \
   {set ::EMENUTMP ""} {set ::EMENUTMP "--from $::EMENUCOMMIT --to tip"}
 R:fossil gdiff $::FILETAIL ? R: fossil gdiff $::EMENUTMP "$::EMENUFILE"
 R:fossil gdiff $::FILETAIL ? R: %U

 S:fossil diff ? S: cd %PD
RW:fossil diff ? RW: fossil tim -t ci -n 99 > $::EMENUTMPFILE
 R:fossil diff ? R: %I {} "DIFF" { \
   v_ {{} {-pady 4} {}} {} \
   fco1  {{From :} {} {-h 10 -state readonly -inpval "$::EMENUCOMMIT1"}} \
     {/@-div1 "\[" -div2 "\]" -ret 1 $::EMENUTMPFILE/@    INFO: /@-div1 "\] " $::EMENUTMPFILE/@} \
   fco2  {{To   :} {} {-h 10 -state readonly -inpval "$::EMENUCOMMIT2"}} \
     {/@-div1 "\[" -div2 "\]" -ret 1 $::EMENUTMPFILE/@    INFO: /@-div1 "\] " $::EMENUTMPFILE/@} \
   chbBr {{Brief:} {-pady 4} {-var ::EMENUBRIEF}} {} \
   seh {{} {-pady 3} {}} {} \
   texc {{Hint:} {} {-h 9 -w 70 -ro 1 -wrap word}} \
   {\n Select versions from the comboboxes to be compared.\n\n By default, 'tip' is compared to current files.\n\n A version may be 'tip', 'current', 'next', 'prev'.\n\n (temp file: $::EMENUTMPFILE)} \
   } -head {\n This will compare selected versions of file:} \
   -weight bold == ::EMENUCOMMIT1 ::EMENUCOMMIT2 ::EMENUBRIEF
 R:fossil diff ? R: %C if {"$::EMENUCOMMIT1" eq ""} \
   {set ::EMENUTMP1 ""} {set ::EMENUTMP1 "--from $::EMENUCOMMIT1"}
 R:fossil diff ? R: %C if {"$::EMENUCOMMIT2" eq ""} \
   {set ::EMENUTMP2 ""} {set ::EMENUTMP2 "--to $::EMENUCOMMIT2"}
 R:fossil diff ? R: %C if {"$::EMENUCOMMIT1$::EMENUCOMMIT2" eq "$::EMENUCOMMIT2"} \
   {set ::EMENUTMP1 "--from current"; set ::EMENUTMP2 "--to tip"}
 R:fossil diff ? R: %C if {$::EMENUBRIEF} {append ::EMENUTMP2 " -brief"}
 S:fossil diff ? S: fossil diff $::EMENUTMP1 $::EMENUTMP2

 S:fossil add $::FILETAIL ? S: cd %PD
 R:fossil add $::FILETAIL ? R: %I {} "ADD FILE" { \
   v_ {{} {-pady 4} {}} {} \
   fil1 {{   File:} {} {-w 70}} {"$::EMENUFILE"} \
   } -head {\n This will add a file to the Fossil repository. \
   \n Use wildcards to add a few.} -weight bold == ::EMENUFILE
 S:fossil add $::FILETAIL ? S: fossil add $::EMENUFILE
 R:fossil add $::FILETAIL ? R: %U

 S:fossil forget $::FILETAIL S: cd %PD
 R:fossil forget $::FILETAIL R: %I {} "FORGET FILE" { \
   v_ {{} {-pady 4} {}} {} \
   fil1 {{   File:} {} {-w 70}} {"$::EMENUFILE"} \
   } -head {\n This will forget a file in the Fossil repository. \
   \n Use wildcards to forget a few.} -hfg $::em::clrhotk -weight bold == ::EMENUFILE
 S:fossil forget $::FILETAIL S: fossil forget $::EMENUFILE
 S:fossil forget $::FILETAIL S: %U

 S:fossil revert $::FILETAIL ? S: cd %PD
 R:fossil revert $::FILETAIL ? R: %I {} "REVERT FILE" { \
   v_ {{} {-pady 4} {}} {} \
   fil1 {{   File:} {} {-w 70}} {"$::EMENUFILE"} \
   } -head {\n This will revert changes of a file in the Fossil repository \
   \n thus restoring a last check-in contents of the file. \
   \n\n Use wildcards to revert a few. \
   \n\n You can undo this with "fossil undo".} -hfg $::em::clrhotk -weight bold == ::EMENUFILE
 S:fossil revert $::FILETAIL ? S: fossil revert $::EMENUFILE
 S:fossil revert $::FILETAIL ? S: %U

 R: R: 2

 S:fossil timeline S: cd %PD
 S:fossil timeline S: fossil timeline

 S:fossil timeline --showfiles S: cd %PD
 S:fossil timeline --showfiles S: fossil timeline --showfiles -n 0

 R: R: 2

 S:fossil commit S: cd %PD
 R:fossil commit R: %q "Committing changes" \
   " Commit with a message to be edited ?\n\n You may leave the message empty."
 S:fossil commit S: fossil commit --allow-empty

 S:fossil commit -f -tag ? S: cd %PD
 R:fossil commit -f -tag ? R: %C set ::COMTAG "%s"
 R:fossil commit -f -tag ? R:  %I warn "TAG COMMIT" { \
   ent1 {{Tag for the last commit:} {} {}} {"$::COMTAG"} \
   } -head {\n This will TAG the last commit:} -weight bold == ::COMTAG
 S:fossil commit -f -tag ? S: fossil commit -f -tag "$::COMTAG" -bgcolor '#F8A4F6'

 R:fossil commit -m ? --branch ? R: cd %PD
 R:fossil commit -m ? --branch ? R: %C set ::COMMES "%s"
 R:fossil commit -m ? --branch ? R: %I warn "COMMIT & BRANCH" { \
   ent1 {{Commit message:}} {"$::COMMES"} \
   ent2 {{Branch name   :}} {$::FSLBRANCH} \
   } -head {\n This will COMMIT and create a new BRANCH \
   \n from a current check-in:} -weight bold == ::COMMES ::FSLBRANCH
 R:fossil commit -m ? --branch ? R: %C if {$::FSLBRANCH=={} || $::FSLBRANCH=={}} exit
SW:fossil commit -m ? --branch ? SW: fossil commit -m "$::COMMES" --branch "$::FSLBRANCH" -bgcolor 0xffc0ff

 R: R: 2

 S:fossil stash S: cd %PD
 R:fossil stash R: %q "Stash" "Stash the current project?"
 R:fossil stash R: fossil stash

 S:fossil stash snapshot $::FILETAIL ? S: cd %PD
 R:fossil stash snapshot $::FILETAIL ? R: %I {} "STASH SNAPSHOT" { \
   v_ {{} {-pady 4} {}} {} \
   fil1 {{   File:} {} {-w 70}} {"$::EMENUFILE"} \
   } -head {\n This will stash snapshot the file:} -hfg $::em::clrhotk -weight bold == ::EMENUFILE
 S:fossil stash snapshot $::FILETAIL ? S: fossil stash snapshot "$::EMENUFILE"
 S:fossil stash snapshot $::FILETAIL ? S: %U

 S:fossil stash list -v S: cd %PD
 S:fossil stash list -v S: fossil stash list -v

 S:fossil stash show S: cd %PD
 S:fossil stash show S: fossil stash show

 S:fossil stash pop S: cd %PD
 R:fossil stash pop R: %q "Stash pop" "Stash pop the current project?\n\nThis saves the stashed changes and \n deletes a changeset from the stash."
 S:fossil stash pop S: fossil stash pop

 S:fossil stash apply S: cd %PD
 R:fossil stash apply R: %q "Stash apply" "Stash apply the current project?\n\nThis saves the stashed changes and \n retains the changeset in the stash."
 S:fossil stash apply S: fossil stash apply

 S:fossil stash drop --all S: cd %PD
 R:fossil stash drop --all R: %q "Stash pop" "Stash drop the current project?\n\nThis forgets the whole stash."
 S:fossil stash drop --all S: fossil stash drop --all

 S:fossil stash gdiff S: cd %PD
 S:fossil stash gdiff S: fossil stash gdiff

 R:  R: 2
M:Next M:m=fossil2.mnu
