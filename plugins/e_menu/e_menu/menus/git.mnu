 ; git menu for e_menu.tcl

[OPTIONS]
in=1.0
pos=15.0
::GITCOMMIT=""
::EMENUTMPFILE=%mn.tmp~
%C if {![info exist ::EMENUCOMMIT]} {set ::EMENUCOMMIT [set ::EMENUCOMMIT2 ""]}
%C if {![info exist ::EMENUFILE]} {set ::EMENUFILE "%f"}
%C if {{%F}=={*} && ![info exist ::EMENUFILE]} {set ::EMENUFILE "*"}
%C set ::FILETAIL \"[file tail $::EMENUFILE]\"

[MENU]
 R:git status R: cd %PD
 S:git status S:pwd\necho %PD\ngit status

 R:git gui R: cd %PD
 R:git gui R: git gui

 R: R: 2

 R:git difftool $::FILETAIL ? R: cd %PD
RW:git difftool $::FILETAIL ? RW: git log --format=oneline -10 > $::EMENUTMPFILE
 R:git difftool $::FILETAIL ? R: %I {} "DIFFTOOL" { \
   v_ {{} {-pady 4} {}} {} \
   fil1 {{   File:} {} {-w 70}} {"$::EMENUFILE"} \
   fco1 {{Version:} {} {-h 10 -state readonly -retpos 0:10 -inpval "$::EMENUCOMMIT"}} \
     {/@-pos 0 -len 10 $::EMENUTMPFILE/@    INFO: /@-div1 { } $::EMENUTMPFILE/@} \
   seh {{} {-pady 3} {}} {} \
   texc {{   Hint:} {} {-h 9 -w 70 -ro 1 -wrap word}} \
   {\n Select a version from the combobox to be compared to HEAD.\n\n If it's blank, the current file is compared to HEAD.\n\n No response means no differences.\n\n (temp file: $::EMENUTMPFILE)} \
   } -head {\n This will compare a selected version of\n     %f\n to its HEAD.} -weight bold == ::EMENUFILE ::EMENUCOMMIT
 R:git difftool $::FILETAIL ? R: %U $::EMENUFILE
 R:git difftool $::FILETAIL ? R: git difftool $::EMENUCOMMIT HEAD -- "$::EMENUFILE"

 S:git diff ? S: cd %PD
RW:git diff ? RW: git log --format=oneline -10 > $::EMENUTMPFILE
 R:git diff ? R: %I {} "DIFF" { \
   v_ {{} {-pady 4} {}} {} \
   fco1 {{Version:} {} {-h 10 -state readonly -retpos 0:10 -inpval "$::EMENUCOMMIT"}} \
     {/@-pos 0 -len 10 -list {""} $::EMENUTMPFILE/@    INFO: /@-div1 { } $::EMENUTMPFILE/@} \
   seh {{} {-pady 3} {}} {} \
   texc {{   Hint:} {} {-h 7 -w 70 -ro 1 -wrap word}} \
   {\n Select a version from the combobox to be compared to HEAD.\n\n If it's blank, the current files are compared to HEAD.\n\n (temp file: $::EMENUTMPFILE)} \
   } -head {\n This will compare a selected version of\n     %PD\n to its HEAD.} -weight bold == ::EMENUCOMMIT
 S:git diff ? S: git diff $::EMENUCOMMIT HEAD

 S:git add $::FILETAIL ? S: cd %PD
 R:git add $::FILETAIL ? R: %I {} "ADD" { \
   fil1 {{   File:} {} {-w 70}} {"$::EMENUFILE"} \
   } -head {\n This will add changes in a file\n to a local repository:} -weight bold == ::EMENUFILE
 S:git add $::FILETAIL ? S: %U $::EMENUFILE
 S:git add $::FILETAIL ? S: git add "$::EMENUFILE"

 S:git add * S: cd %PD
 R:git add * R: %q "Adding changes" "Add all changes in\n\n%PD\n\nto a local repository ?"
 S:git add * S: git add *\ngit status

 R: R: 2

 S:git commit S: cd %PD
 R:git commit R: %q "Committing changes" "Commit with message to be edited ?"
 S:git commit S: git commit

 S:git commit -m "%dd_on_%t2" S: cd %PD
 R:git commit -m "%dd_on_%t2" R: %q "Committing changes" "Commit with message\n\n'%dd_on_%t2' ?"
 S:git commit -m "%dd_on_%t2" S: git commit -m "%dd_on_%t2"

 S:git commit -am "%s on %t2" S: cd %PD
 R:git commit -am "%s on %t2" R: %q "Committing changes" "Add and commit with message\n\n'%s at %t2' ?"
 S:git commit -am "%s on %t2" S: git commit -am "%s on %t2"

 S:git commit --amend -am "%s %t1 #%i1" S: cd %PD
 R:git commit --amend -am "%s %t1 #%i1" R: %q "Amending commit" "Amend the last commit\nwith message\n\n'%s %t1 #%i1' ?"
 S:git commit --amend -am "%s %t1 #%i1" S: git commit --amend -am "%s %t1 #%i1"

 R: R: 2

 S:git log "1 hour ago" S: cd %PD
 S:git log "1 hour ago" S: git log --since="1 hour ago"

 S:git log "1 day ago" S: cd %PD
 S:git log "1 day ago" S: git log --since="1 day ago"

 S:git log -p "1 hour ago" S: cd %PD
 S:git log -p "1 hour ago" S: git log -p --since="1 hour ago"

 S:git log -p "1 day ago" S: cd %PD
 S:git log -p "1 day ago" S: git log -p --since="1 day ago"

 S:git log S: cd %PD
 S:git log S: git log

 S:git log --merges S: cd %PD
 S:git log --merges S: git log --merges

 R: R: 2

 S:git branch S: cd %PD
 S:git branch S: git branch

 S:git branch "%s" S: cd %PD
 R:git branch "%s" R: %q "Branch" "Create new branch\n\n'%s' ?"
 S:git branch "%s" S: git branch -f "%s"

 S:git checkout "%s" S: cd %PD
 R:git checkout "%s" R: %q "Checkout" "Checkout to\n\n'%s' ?"
 S:git checkout "%s" S: git checkout "%s"

 R: R: 2

 R:terminal here R: cd %d
 R:terminal here R: %IF [::iswindows] %THEN cmd.exe /K %ELSE lxterminal

 R: R: 2

 ME: Dangerous ME: m=git2.mnu w= "cb=%cb in=%in"

; R: edit ./wiki.txt R: ?  some.err.   ./wiki.txt

;S: echo "эхо - %i3 %i4" S: echo "эхо - %i3 %i4"
;S: echo "эхо - %i8 %i9" S: echo "эхо - %i8 %i9"
