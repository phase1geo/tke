; hg menu for e_menu.tcl

 R: hg summary -- hg status R: cd %PD
 S: hg summary -- hg status S: echo %PD\nhg summary\necho ---------------\nhg status

 R: hg heads -- hg parents R: cd %PD
 S: hg heads -- hg parents S: echo %PD\nhg heads\necho ---------------\nhg parents

 R: hg addremove * R: %q "ADD" "This will ADD & REMOVE all changes in:\n\n%PD"
 R: hg addremove * R: cd %PD
 S: hg addremove * S: hg addremove *\nhg status

SW: hg commit SW: hg status
 R: hg commit R: %q "Committing changes" "This will COMMIT with input message in:\n\n%PD"
 R: hg commit R: cd %PD
 S: hg commit S: hg commit

 R:  R: 2

 R: kdiff3 of %s0 R: cd %PD
 R: kdiff3 of %s0 R: %C if {![info exist ::fInp2] || $::fInp2==""} {set ::fInp2 "%F"}
 R: kdiff3 of %s0 R: %I ques "KDIFF3" {filName {{File:} {} {-w 60}} {$::fInp2} lab} -head "\n Enter/choose a file to kdiff3" -weight bold >> ::fInp2
 R: kdiff3 of %s0 R: hg extdiff -p kdiff3 "$::fInp2"

 R: hg diff R: cd %PD
 S: hg diff S: hg diff

 R: hg diff -r tip %s0 R: cd %PD
 R: hg diff -r tip %s0 R: %C if {![info exist ::fInp2] || $::fInp2==""} {set ::fInp2 "%F"}
 R: hg diff -r tip %s0 R: %I ques "DIFFERENCES" {filName {{File(s):} {} {-w 60}} {$::fInp2} lab} -head "\n Enter/choose file(s) to diff\n (quote 'a name' if it has spaces)" -weight bold >> ::fInp2
 S: hg diff -r tip %s0 S: hg diff -r tip $::fInp2

 R: hg annotate %s0 R: cd %PD
 R: hg annotate %s0 R: %C if {![info exist ::fInp2] || $::fInp2==""} {set ::fInp2 "%F"}
 R: hg annotate %s0 R: %I ques "ANNOTATE" {filName {{File:} {} {-w 60}} {$::fInp2} lab} -head "\n Enter/choose a file to annotate" -weight bold >> ::fInp2
 S: hg annotate %s0 S: hg annotate '$::fInp2'

 R: hg log -l 10 -v R: cd %PD
 S: hg log -l 10 -v S: hg log -l 10 -v

 R: hg log -p -l 2 %s0 R: cd %PD
 R: hg log -p -l 2 %s0 R: %C if {![info exist ::fInp2] || $::fInp2==""} {set ::fInp2 "%F"}
 R: hg log -p -l 2 %s0 R: %I ques "LOG" {filName {{File(s):} {} {-w 60}} {$::fInp2} lab} -head "\n Enter/choose file(s) to view log patches\n (quote 'a name' if it has spaces)" -weight bold >> ::fInp2
 S: hg log -p -l 2 %s0 S: hg log -p -l 2 $::fInp2

 R: hg revert R: %q "REVERT" "This will REVERT ALL changes in\n\n%PD"
 R: hg revert R: cd %PD
 S: hg revert S: hg revert -a -C

 R: hg revert %s0 R: cd %PD
 R: hg revert %s0 R: %C if {![info exist ::fInp2] || $::fInp2==""} {set ::fInp2 "%F"}
 R: hg revert %s0 R: %I ques "REVERT" {filName {{File(s):} {} {-w 60}} {$::fInp2} lab} -head "\n Enter/choose file(s) to revert\n (quote 'a name' if it has spaces)" -weight bold >> ::fInp2
 R: hg revert %s0 R: %q "REVERT" "This will REVERT the changes of\n\n$::fInp2"
 S: hg revert %s0 S: hg revert $::fInp2

 R: hg rollback R: %q "ROLLBACK" "This will ROLL BACK the last commit in\n\n%PD"
 R: hg rollback R: cd %PD
 S: hg rollback S: hg rollback

 R: hg commit --amend R: %q "AMEND COMMIT" "This will AMEND the last commit in\n\n%PD"
 R: hg commit --amend R: cd %PD
 S: hg commit --amend S: hg commit --amend

 R:  R: 2

 R: hg incoming R: cd %PD
 S: hg incoming S: hg incoming

 R: hg fetch R: %q "FETCH" "This will PULL, MERGE and COMMIT changes into:\n\n%PD"
 R: hg fetch R: cd %PD
 S: hg fetch S: hg fetch

 R: hg pull R: %q "PULL" "This will PULL changes into:\n\n%PD"
 R: hg pull R: cd %PD
 S: hg pull S: hg pull

 R: hg update R: %q "UPDATE" "This will UPDATE to the tip changeset in:\n\n%PD"
 R: hg update R: cd %PD
 S: hg update S: hg update

 R: hg merge -P R: %q "MERGE PREVIEW" "This will PREVIEW the merge in:\n\n%PD"
 R: hg merge -P R: cd %PD
 S: hg merge -P S: hg merge -P

 R: hg merge R: %q "MERGE" "This will MERGE changes in:\n\n%PD"
 R: hg merge R: cd %PD
 S: hg merge S: hg merge
 R: hg merge R: %q "COMMIT" "This will COMMIT with message:\n\nMerge on %t2"
 S: hg merge S: hg commit -m "Merge on %t2"

 R:  R: 2

 R: hg outgoing R: cd %PD
 S: hg outgoing S: hg outgoing

 R: hg push R: %q "PUSH" "This will PUSH changes of:\n\n%PD"
 R: hg push R: cd %PD
 S: hg push S: hg push

 R:  R: 2

 R: hg init (in %PD) R: %Q "MERCURIAL INIT" "Initialize the new Mercurial repository in\n\n%PD?"
 R: hg init (in %PD) R: cd %PD
 R: hg init (in %PD) R: %P echo "syntax: glob\n.*\n*~\n*.swp\n*.tmp\n*.bak\n*.log\n*.zip\n*.rar\n*.tgz\n*.cur\n*.dll\n*.dylib\n*.ico\n*.gif\n*.bmp\n*.png\n*.jpg\n*.o" > %PD/.hgignore
 S: hg init (in %PD) S: dir\necho ------------\nhg init\nhg status
 R: edit ~/.hgrc R: %P %E $::env(HOME)/.hgrc
 R: edit .hgignore R: %E %PD/.hgignore

[OPTIONS]
o=0
n=< hg >
