Shift/Reduce error in state 19 between rule 7 and token "CHAR", resolved as shift.
Shift/Reduce error in state 19 between rule 7 and token "NEWLINE", resolved as shift.
Shift/Reduce error in state 19 between rule 7 and token "TAB", resolved as shift.
Shift/Reduce error in state 19 between rule 7 and token "DECIMAL", resolved as shift.
Shift/Reduce error in state 19 between rule 7 and token "/", resolved as shift.
Shift/Reduce error in state 19 between rule 7 and token "OPEN_PAREN", resolved as shift.
Shift/Reduce error in state 19 between rule 7 and token "CLOSE_PAREN", resolved as shift.
Shift/Reduce error in state 19 between rule 7 and token "?", resolved as shift.
Shift/Reduce error in state 19 between rule 7 and token ":", resolved as shift.
Shift/Reduce error in state 19 between rule 7 and token "OPEN_BRACKET", resolved as shift.
Shift/Reduce error in state 19 between rule 7 and token "CLOSE_BRACKET", resolved as shift.
Shift/Reduce error in state 23 between rule 82 and token "CHAR", resolved as shift.
Shift/Reduce error in state 23 between rule 82 and token "NEWLINE", resolved as shift.
Shift/Reduce error in state 23 between rule 82 and token "TAB", resolved as shift.
Shift/Reduce error in state 23 between rule 82 and token "DECIMAL", resolved as shift.
Shift/Reduce error in state 23 between rule 82 and token "/", resolved as shift.
Shift/Reduce error in state 23 between rule 82 and token "OPEN_PAREN", resolved as shift.
Shift/Reduce error in state 23 between rule 82 and token "CLOSE_PAREN", resolved as shift.
Shift/Reduce error in state 23 between rule 82 and token "?", resolved as shift.
Shift/Reduce error in state 23 between rule 82 and token ":", resolved as shift.
Shift/Reduce error in state 23 between rule 82 and token "OPEN_BRACKET", resolved as shift.
Shift/Reduce error in state 23 between rule 82 and token "CLOSE_BRACKET", resolved as shift.
Shift/Reduce error in state 32 between rule 2 and token "CHAR", resolved as shift.
Shift/Reduce error in state 32 between rule 2 and token "NEWLINE", resolved as shift.
Shift/Reduce error in state 32 between rule 2 and token "TAB", resolved as shift.
Shift/Reduce error in state 32 between rule 2 and token "DECIMAL", resolved as shift.
Shift/Reduce error in state 32 between rule 2 and token "/", resolved as shift.
Shift/Reduce error in state 32 between rule 2 and token "OPEN_PAREN", resolved as shift.
Shift/Reduce error in state 32 between rule 2 and token "CLOSE_PAREN", resolved as shift.
Shift/Reduce error in state 32 between rule 2 and token "?", resolved as shift.
Shift/Reduce error in state 32 between rule 2 and token ":", resolved as shift.
Shift/Reduce error in state 32 between rule 2 and token "OPEN_BRACKET", resolved as shift.
Shift/Reduce error in state 32 between rule 2 and token "CLOSE_BRACKET", resolved as shift.
Shift/Reduce error in state 48 between rule 80 and token "CHAR", resolved as shift.
Shift/Reduce error in state 48 between rule 80 and token "NEWLINE", resolved as shift.
Shift/Reduce error in state 48 between rule 80 and token "TAB", resolved as shift.
Shift/Reduce error in state 48 between rule 80 and token "DECIMAL", resolved as shift.
Shift/Reduce error in state 48 between rule 80 and token "/", resolved as shift.
Shift/Reduce error in state 48 between rule 80 and token "OPEN_PAREN", resolved as shift.
Shift/Reduce error in state 48 between rule 80 and token "CLOSE_PAREN", resolved as shift.
Shift/Reduce error in state 48 between rule 80 and token "?", resolved as shift.
Shift/Reduce error in state 48 between rule 80 and token ":", resolved as shift.
Shift/Reduce error in state 48 between rule 80 and token "OPEN_BRACKET", resolved as shift.
Shift/Reduce error in state 48 between rule 80 and token "CLOSE_BRACKET", resolved as shift.
Shift/Reduce error in state 116 between rule 100 and token "CHAR", resolved as shift.
Shift/Reduce error in state 116 between rule 100 and token "NEWLINE", resolved as shift.
Shift/Reduce error in state 116 between rule 100 and token "TAB", resolved as shift.
Shift/Reduce error in state 116 between rule 100 and token "DECIMAL", resolved as shift.
Shift/Reduce error in state 116 between rule 100 and token "?", resolved as shift.
Shift/Reduce error in state 116 between rule 100 and token "DOLLAR_SIGN", resolved as shift.
Shift/Reduce error in state 116 between rule 100 and token "LOWER", resolved as shift.
Shift/Reduce error in state 116 between rule 100 and token "UPPER", resolved as shift.
Shift/Reduce error in state 116 between rule 100 and token "LOWER_BLOCK", resolved as shift.
Shift/Reduce error in state 116 between rule 100 and token "UPPER_BLOCK", resolved as shift.
Shift/Reduce error in state 116 between rule 100 and token "OPEN_PAREN", resolved as shift.
Shift/Reduce error in state 117 between rule 101 and token "CHAR", resolved as shift.
Shift/Reduce error in state 117 between rule 101 and token "NEWLINE", resolved as shift.
Shift/Reduce error in state 117 between rule 101 and token "TAB", resolved as shift.
Shift/Reduce error in state 117 between rule 101 and token "DECIMAL", resolved as shift.
Shift/Reduce error in state 117 between rule 101 and token "?", resolved as shift.
Shift/Reduce error in state 117 between rule 101 and token "DOLLAR_SIGN", resolved as shift.
Shift/Reduce error in state 117 between rule 101 and token "LOWER", resolved as shift.
Shift/Reduce error in state 117 between rule 101 and token "UPPER", resolved as shift.
Shift/Reduce error in state 117 between rule 101 and token "LOWER_BLOCK", resolved as shift.
Shift/Reduce error in state 117 between rule 101 and token "UPPER_BLOCK", resolved as shift.
Shift/Reduce error in state 117 between rule 101 and token "OPEN_PAREN", resolved as shift.
token table:
id    token      type
/     /          terminal
:     :          terminal
?     ?          terminal
`     `          terminal
error error      terminal
257   DECIMAL    terminal
258   DOLLAR_SIGN terminal
259   VARNAME    terminal
260   CHAR       terminal
261   LOWER      terminal
262   UPPER      terminal
263   LOWER_BLOCK terminal
264   UPPER_BLOCK terminal
265   END_BLOCK  terminal
266   NEWLINE    terminal
267   TAB        terminal
268   OPEN_BRACKET terminal
269   CLOSE_BRACKET terminal
270   OPEN_PAREN terminal
271   CLOSE_PAREN terminal
272   main       non-terminal
273   snippet    non-terminal
274   tabstop    non-terminal
275   transform  non-terminal
276   variable   non-terminal
277   varname    non-terminal
278   pattern    non-terminal
279   opts       non-terminal
280   value      non-terminal
281   text       non-terminal
282   shell      non-terminal
283   shell_text non-terminal
284   format     non-terminal
285   case_fold  non-terminal
286   cond_insert non-terminal
287   start'     non-terminal

rule table:
  0:  start'     -> main
  1:  main       -> snippet
  2:  snippet    -> snippet text
  3:  snippet    -> snippet variable
  4:  snippet    -> snippet transform
  5:  snippet    -> snippet tabstop
  6:  snippet    -> snippet shell
  7:  snippet    -> text
  8:  snippet    -> variable
  9:  snippet    -> transform
 10:  snippet    -> tabstop
 11:  snippet    -> shell
 12:  tabstop    -> DOLLAR_SIGN DECIMAL
 13:  tabstop    -> DOLLAR_SIGN OPEN_BRACKET DECIMAL : value CLOSE_BRACKET
 14:  transform  -> DOLLAR_SIGN OPEN_BRACKET DECIMAL / pattern / format / opts CLOSE_BRACKET
 15:  transform  -> DOLLAR_SIGN OPEN_BRACKET DECIMAL / pattern / format / CLOSE_BRACKET
 16:  variable   -> DOLLAR_SIGN varname
 17:  variable   -> DOLLAR_SIGN OPEN_BRACKET varname : value CLOSE_BRACKET
 18:  variable   -> DOLLAR_SIGN OPEN_BRACKET varname / pattern / format / opts CLOSE_BRACKET
 19:  variable   -> DOLLAR_SIGN OPEN_BRACKET varname / pattern / format / CLOSE_BRACKET
 20:  varname    -> VARNAME
 21:  pattern    -> pattern CHAR
 22:  pattern    -> pattern NEWLINE
 23:  pattern    -> pattern TAB
 24:  pattern    -> pattern DECIMAL
 25:  pattern    -> pattern DOLLAR_SIGN
 26:  pattern    -> pattern OPEN_PAREN
 27:  pattern    -> pattern CLOSE_PAREN
 28:  pattern    -> pattern ?
 29:  pattern    -> pattern :
 30:  pattern    -> CHAR
 31:  pattern    -> NEWLINE
 32:  pattern    -> TAB
 33:  pattern    -> DECIMAL
 34:  pattern    -> DOLLAR_SIGN
 35:  pattern    -> OPEN_PAREN
 36:  pattern    -> CLOSE_PAREN
 37:  pattern    -> ?
 38:  pattern    -> :
 39:  opts       -> opts CHAR
 40:  opts       -> CHAR
 41:  value      -> value CHAR
 42:  value      -> value NEWLINE
 43:  value      -> value TAB
 44:  value      -> value DECIMAL
 45:  value      -> value /
 46:  value      -> value variable
 47:  value      -> value shell
 48:  value      -> value tabstop
 49:  value      -> CHAR
 50:  value      -> NEWLINE
 51:  value      -> TAB
 52:  value      -> DECIMAL
 53:  value      -> /
 54:  value      -> variable
 55:  value      -> shell
 56:  value      -> tabstop
 57:  text       -> text CHAR
 58:  text       -> text NEWLINE
 59:  text       -> text TAB
 60:  text       -> text DECIMAL
 61:  text       -> text /
 62:  text       -> text OPEN_PAREN
 63:  text       -> text CLOSE_PAREN
 64:  text       -> text ?
 65:  text       -> text :
 66:  text       -> text OPEN_BRACKET
 67:  text       -> text CLOSE_BRACKET
 68:  text       -> CHAR
 69:  text       -> NEWLINE
 70:  text       -> TAB
 71:  text       -> DECIMAL
 72:  text       -> /
 73:  text       -> OPEN_PAREN
 74:  text       -> CLOSE_PAREN
 75:  text       -> ?
 76:  text       -> :
 77:  text       -> OPEN_BRACKET
 78:  text       -> CLOSE_BRACKET
 79:  shell      -> ` shell_text `
 80:  shell_text -> shell_text text
 81:  shell_text -> shell_text variable
 82:  shell_text -> text
 83:  shell_text -> variable
 84:  format     -> format CHAR
 85:  format     -> format NEWLINE
 86:  format     -> format TAB
 87:  format     -> format DECIMAL
 88:  format     -> format ?
 89:  format     -> format case_fold
 90:  format     -> format cond_insert
 91:  format     -> format DOLLAR_SIGN DECIMAL
 92:  format     -> CHAR
 93:  format     -> NEWLINE
 94:  format     -> TAB
 95:  format     -> DECIMAL
 96:  format     -> ?
 97:  format     -> case_fold
 98:  format     -> cond_insert
 99:  format     -> DOLLAR_SIGN DECIMAL
100:  case_fold  -> LOWER format
101:  case_fold  -> UPPER format
102:  case_fold  -> LOWER_BLOCK format END_BLOCK
103:  case_fold  -> UPPER_BLOCK format END_BLOCK
104:  cond_insert -> OPEN_PAREN ? DECIMAL : format CLOSE_PAREN
105:  cond_insert -> OPEN_PAREN ? DECIMAL : format : format CLOSE_PAREN

lalr(1) table:
state 0:
   start'     -> . main, {$}
   main       -> . snippet, {$}
   snippet    -> . snippet text, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   snippet    -> . snippet variable, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   snippet    -> . snippet transform, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   snippet    -> . snippet tabstop, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   snippet    -> . snippet shell, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   snippet    -> . text, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   snippet    -> . variable, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   snippet    -> . transform, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   snippet    -> . tabstop, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   snippet    -> . shell, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . text CHAR, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . text NEWLINE, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . text TAB, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . text DECIMAL, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . text /, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . text OPEN_PAREN, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . text CLOSE_PAREN, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . text ?, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . text :, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . text OPEN_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . text CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . CHAR, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . NEWLINE, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . TAB, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . DECIMAL, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . /, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . OPEN_PAREN, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . CLOSE_PAREN, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . ?, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . :, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . OPEN_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   variable   -> . DOLLAR_SIGN varname, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   variable   -> . DOLLAR_SIGN OPEN_BRACKET varname : value CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   variable   -> . DOLLAR_SIGN OPEN_BRACKET varname / pattern / format / opts CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   variable   -> . DOLLAR_SIGN OPEN_BRACKET varname / pattern / format / CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   transform  -> . DOLLAR_SIGN OPEN_BRACKET DECIMAL / pattern / format / opts CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   transform  -> . DOLLAR_SIGN OPEN_BRACKET DECIMAL / pattern / format / CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   tabstop    -> . DOLLAR_SIGN DECIMAL, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   tabstop    -> . DOLLAR_SIGN OPEN_BRACKET DECIMAL : value CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   shell      -> . ` shell_text `, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   transitions:  / => s1  : => s2  ? => s3  ` => s4  DECIMAL => s5  DOLLAR_SIGN => s6  CHAR => s7  NEWLINE => s8  TAB => s9  OPEN_BRACKET => s10  CLOSE_BRACKET => s11  OPEN_PAREN => s12  CLOSE_PAREN => s13  main => s14  snippet => s15  tabstop => s16  transform => s17  variable => s18  text => s19  shell => s20

state 1:
   text       -> / ., / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `

state 2:
   text       -> : ., / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `

state 3:
   text       -> ? ., / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `

state 4:
   shell      -> ` . shell_text `, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   shell_text -> . shell_text text, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   shell_text -> . shell_text variable, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   shell_text -> . text, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   shell_text -> . variable, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . text CHAR, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . text NEWLINE, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . text TAB, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . text DECIMAL, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . text /, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . text OPEN_PAREN, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . text CLOSE_PAREN, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . text ?, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . text :, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . text OPEN_BRACKET, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . text CLOSE_BRACKET, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . CHAR, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . NEWLINE, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . TAB, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . DECIMAL, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . /, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . OPEN_PAREN, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . CLOSE_PAREN, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . ?, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . :, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . OPEN_BRACKET, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . CLOSE_BRACKET, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   variable   -> . DOLLAR_SIGN varname, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   variable   -> . DOLLAR_SIGN OPEN_BRACKET varname : value CLOSE_BRACKET, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   variable   -> . DOLLAR_SIGN OPEN_BRACKET varname / pattern / format / opts CLOSE_BRACKET, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   variable   -> . DOLLAR_SIGN OPEN_BRACKET varname / pattern / format / CLOSE_BRACKET, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   transitions:  / => s1  : => s2  ? => s3  DECIMAL => s5  DOLLAR_SIGN => s21  CHAR => s7  NEWLINE => s8  TAB => s9  OPEN_BRACKET => s10  CLOSE_BRACKET => s11  OPEN_PAREN => s12  CLOSE_PAREN => s13  variable => s22  text => s23  shell_text => s24

state 5:
   text       -> DECIMAL ., / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `

state 6:
   variable   -> DOLLAR_SIGN . varname, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   variable   -> DOLLAR_SIGN . OPEN_BRACKET varname : value CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   variable   -> DOLLAR_SIGN . OPEN_BRACKET varname / pattern / format / opts CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   variable   -> DOLLAR_SIGN . OPEN_BRACKET varname / pattern / format / CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   transform  -> DOLLAR_SIGN . OPEN_BRACKET DECIMAL / pattern / format / opts CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   transform  -> DOLLAR_SIGN . OPEN_BRACKET DECIMAL / pattern / format / CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   tabstop    -> DOLLAR_SIGN . DECIMAL, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   tabstop    -> DOLLAR_SIGN . OPEN_BRACKET DECIMAL : value CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   varname    -> . VARNAME, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   transitions:  DECIMAL => s25  VARNAME => s26  OPEN_BRACKET => s27  varname => s28

state 7:
   text       -> CHAR ., / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `

state 8:
   text       -> NEWLINE ., / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `

state 9:
   text       -> TAB ., / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `

state 10:
   text       -> OPEN_BRACKET ., / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `

state 11:
   text       -> CLOSE_BRACKET ., / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `

state 12:
   text       -> OPEN_PAREN ., / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `

state 13:
   text       -> CLOSE_PAREN ., / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `

state 14:
   start'     -> main ., {$}

state 15:
   main       -> snippet ., {$}
   snippet    -> snippet . text, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   snippet    -> snippet . variable, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   snippet    -> snippet . transform, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   snippet    -> snippet . tabstop, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   snippet    -> snippet . shell, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . text CHAR, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . text NEWLINE, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . text TAB, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . text DECIMAL, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . text /, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . text OPEN_PAREN, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . text CLOSE_PAREN, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . text ?, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . text :, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . text OPEN_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . text CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . CHAR, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . NEWLINE, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . TAB, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . DECIMAL, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . /, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . OPEN_PAREN, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . CLOSE_PAREN, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . ?, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . :, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . OPEN_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   variable   -> . DOLLAR_SIGN varname, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   variable   -> . DOLLAR_SIGN OPEN_BRACKET varname : value CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   variable   -> . DOLLAR_SIGN OPEN_BRACKET varname / pattern / format / opts CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   variable   -> . DOLLAR_SIGN OPEN_BRACKET varname / pattern / format / CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   transform  -> . DOLLAR_SIGN OPEN_BRACKET DECIMAL / pattern / format / opts CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   transform  -> . DOLLAR_SIGN OPEN_BRACKET DECIMAL / pattern / format / CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   tabstop    -> . DOLLAR_SIGN DECIMAL, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   tabstop    -> . DOLLAR_SIGN OPEN_BRACKET DECIMAL : value CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   shell      -> . ` shell_text `, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   transitions:  / => s1  : => s2  ? => s3  ` => s4  DECIMAL => s5  DOLLAR_SIGN => s6  CHAR => s7  NEWLINE => s8  TAB => s9  OPEN_BRACKET => s10  CLOSE_BRACKET => s11  OPEN_PAREN => s12  CLOSE_PAREN => s13  tabstop => s29  transform => s30  variable => s31  text => s32  shell => s33

state 16:
   snippet    -> tabstop ., / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `

state 17:
   snippet    -> transform ., / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `

state 18:
   snippet    -> variable ., / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `

state 19:
   snippet    -> text ., / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> text . CHAR, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> text . NEWLINE, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> text . TAB, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> text . DECIMAL, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> text . /, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> text . OPEN_PAREN, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> text . CLOSE_PAREN, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> text . ?, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> text . :, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> text . OPEN_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> text . CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   transitions:  / => s34  : => s35  ? => s36  DECIMAL => s37  CHAR => s38  NEWLINE => s39  TAB => s40  OPEN_BRACKET => s41  CLOSE_BRACKET => s42  OPEN_PAREN => s43  CLOSE_PAREN => s44

state 20:
   snippet    -> shell ., / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `

state 21:
   variable   -> DOLLAR_SIGN . varname, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   variable   -> DOLLAR_SIGN . OPEN_BRACKET varname : value CLOSE_BRACKET, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   variable   -> DOLLAR_SIGN . OPEN_BRACKET varname / pattern / format / opts CLOSE_BRACKET, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   variable   -> DOLLAR_SIGN . OPEN_BRACKET varname / pattern / format / CLOSE_BRACKET, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   varname    -> . VARNAME, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   transitions:  VARNAME => s26  OPEN_BRACKET => s45  varname => s28

state 22:
   shell_text -> variable ., / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `

state 23:
   shell_text -> text ., / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> text . CHAR, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> text . NEWLINE, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> text . TAB, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> text . DECIMAL, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> text . /, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> text . OPEN_PAREN, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> text . CLOSE_PAREN, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> text . ?, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> text . :, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> text . OPEN_BRACKET, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> text . CLOSE_BRACKET, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   transitions:  / => s34  : => s35  ? => s36  DECIMAL => s37  CHAR => s38  NEWLINE => s39  TAB => s40  OPEN_BRACKET => s41  CLOSE_BRACKET => s42  OPEN_PAREN => s43  CLOSE_PAREN => s44

state 24:
   shell      -> ` shell_text . `, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   shell_text -> shell_text . text, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   shell_text -> shell_text . variable, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . text CHAR, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . text NEWLINE, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . text TAB, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . text DECIMAL, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . text /, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . text OPEN_PAREN, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . text CLOSE_PAREN, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . text ?, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . text :, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . text OPEN_BRACKET, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . text CLOSE_BRACKET, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . CHAR, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . NEWLINE, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . TAB, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . DECIMAL, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . /, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . OPEN_PAREN, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . CLOSE_PAREN, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . ?, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . :, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . OPEN_BRACKET, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> . CLOSE_BRACKET, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   variable   -> . DOLLAR_SIGN varname, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   variable   -> . DOLLAR_SIGN OPEN_BRACKET varname : value CLOSE_BRACKET, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   variable   -> . DOLLAR_SIGN OPEN_BRACKET varname / pattern / format / opts CLOSE_BRACKET, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   variable   -> . DOLLAR_SIGN OPEN_BRACKET varname / pattern / format / CLOSE_BRACKET, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   transitions:  / => s1  : => s2  ? => s3  ` => s46  DECIMAL => s5  DOLLAR_SIGN => s21  CHAR => s7  NEWLINE => s8  TAB => s9  OPEN_BRACKET => s10  CLOSE_BRACKET => s11  OPEN_PAREN => s12  CLOSE_PAREN => s13  variable => s47  text => s48

state 25:
   tabstop    -> DOLLAR_SIGN DECIMAL ., / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `

state 26:
   varname    -> VARNAME ., / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `

state 27:
   variable   -> DOLLAR_SIGN OPEN_BRACKET . varname : value CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   variable   -> DOLLAR_SIGN OPEN_BRACKET . varname / pattern / format / opts CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   variable   -> DOLLAR_SIGN OPEN_BRACKET . varname / pattern / format / CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   transform  -> DOLLAR_SIGN OPEN_BRACKET . DECIMAL / pattern / format / opts CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   transform  -> DOLLAR_SIGN OPEN_BRACKET . DECIMAL / pattern / format / CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   tabstop    -> DOLLAR_SIGN OPEN_BRACKET . DECIMAL : value CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   varname    -> . VARNAME, / :
   transitions:  DECIMAL => s49  VARNAME => s26  varname => s50

state 28:
   variable   -> DOLLAR_SIGN varname ., / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `

state 29:
   snippet    -> snippet tabstop ., / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `

state 30:
   snippet    -> snippet transform ., / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `

state 31:
   snippet    -> snippet variable ., / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `

state 32:
   snippet    -> snippet text ., / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> text . CHAR, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> text . NEWLINE, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> text . TAB, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> text . DECIMAL, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> text . /, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> text . OPEN_PAREN, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> text . CLOSE_PAREN, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> text . ?, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> text . :, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> text . OPEN_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> text . CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   transitions:  / => s34  : => s35  ? => s36  DECIMAL => s37  CHAR => s38  NEWLINE => s39  TAB => s40  OPEN_BRACKET => s41  CLOSE_BRACKET => s42  OPEN_PAREN => s43  CLOSE_PAREN => s44

state 33:
   snippet    -> snippet shell ., / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `

state 34:
   text       -> text / ., / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `

state 35:
   text       -> text : ., / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `

state 36:
   text       -> text ? ., / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `

state 37:
   text       -> text DECIMAL ., / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `

state 38:
   text       -> text CHAR ., / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `

state 39:
   text       -> text NEWLINE ., / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `

state 40:
   text       -> text TAB ., / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `

state 41:
   text       -> text OPEN_BRACKET ., / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `

state 42:
   text       -> text CLOSE_BRACKET ., / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `

state 43:
   text       -> text OPEN_PAREN ., / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `

state 44:
   text       -> text CLOSE_PAREN ., / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `

state 45:
   variable   -> DOLLAR_SIGN OPEN_BRACKET . varname : value CLOSE_BRACKET, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   variable   -> DOLLAR_SIGN OPEN_BRACKET . varname / pattern / format / opts CLOSE_BRACKET, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   variable   -> DOLLAR_SIGN OPEN_BRACKET . varname / pattern / format / CLOSE_BRACKET, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   varname    -> . VARNAME, / :
   transitions:  VARNAME => s26  varname => s50

state 46:
   shell      -> ` shell_text ` ., / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `

state 47:
   shell_text -> shell_text variable ., / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `

state 48:
   shell_text -> shell_text text ., / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> text . CHAR, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> text . NEWLINE, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> text . TAB, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> text . DECIMAL, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> text . /, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> text . OPEN_PAREN, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> text . CLOSE_PAREN, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> text . ?, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> text . :, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> text . OPEN_BRACKET, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   text       -> text . CLOSE_BRACKET, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   transitions:  / => s34  : => s35  ? => s36  DECIMAL => s37  CHAR => s38  NEWLINE => s39  TAB => s40  OPEN_BRACKET => s41  CLOSE_BRACKET => s42  OPEN_PAREN => s43  CLOSE_PAREN => s44

state 49:
   transform  -> DOLLAR_SIGN OPEN_BRACKET DECIMAL . / pattern / format / opts CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   transform  -> DOLLAR_SIGN OPEN_BRACKET DECIMAL . / pattern / format / CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   tabstop    -> DOLLAR_SIGN OPEN_BRACKET DECIMAL . : value CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   transitions:  / => s51  : => s52

state 50:
   variable   -> DOLLAR_SIGN OPEN_BRACKET varname . : value CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   variable   -> DOLLAR_SIGN OPEN_BRACKET varname . / pattern / format / opts CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   variable   -> DOLLAR_SIGN OPEN_BRACKET varname . / pattern / format / CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   transitions:  / => s53  : => s54

state 51:
   transform  -> DOLLAR_SIGN OPEN_BRACKET DECIMAL / . pattern / format / opts CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   transform  -> DOLLAR_SIGN OPEN_BRACKET DECIMAL / . pattern / format / CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   pattern    -> . pattern CHAR, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   pattern    -> . pattern NEWLINE, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   pattern    -> . pattern TAB, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   pattern    -> . pattern DECIMAL, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   pattern    -> . pattern DOLLAR_SIGN, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   pattern    -> . pattern OPEN_PAREN, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   pattern    -> . pattern CLOSE_PAREN, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   pattern    -> . pattern ?, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   pattern    -> . pattern :, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   pattern    -> . CHAR, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   pattern    -> . NEWLINE, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   pattern    -> . TAB, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   pattern    -> . DECIMAL, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   pattern    -> . DOLLAR_SIGN, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   pattern    -> . OPEN_PAREN, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   pattern    -> . CLOSE_PAREN, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   pattern    -> . ?, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   pattern    -> . :, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   transitions:  : => s55  ? => s56  DECIMAL => s57  DOLLAR_SIGN => s58  CHAR => s59  NEWLINE => s60  TAB => s61  OPEN_PAREN => s62  CLOSE_PAREN => s63  pattern => s64

state 52:
   tabstop    -> DOLLAR_SIGN OPEN_BRACKET DECIMAL : . value CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   value      -> . value CHAR, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   value      -> . value NEWLINE, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   value      -> . value TAB, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   value      -> . value DECIMAL, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   value      -> . value /, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   value      -> . value variable, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   value      -> . value shell, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   value      -> . value tabstop, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   value      -> . CHAR, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   value      -> . NEWLINE, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   value      -> . TAB, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   value      -> . DECIMAL, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   value      -> . /, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   value      -> . variable, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   value      -> . shell, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   value      -> . tabstop, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   variable   -> . DOLLAR_SIGN varname, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   variable   -> . DOLLAR_SIGN OPEN_BRACKET varname : value CLOSE_BRACKET, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   variable   -> . DOLLAR_SIGN OPEN_BRACKET varname / pattern / format / opts CLOSE_BRACKET, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   variable   -> . DOLLAR_SIGN OPEN_BRACKET varname / pattern / format / CLOSE_BRACKET, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   shell      -> . ` shell_text `, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   tabstop    -> . DOLLAR_SIGN DECIMAL, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   tabstop    -> . DOLLAR_SIGN OPEN_BRACKET DECIMAL : value CLOSE_BRACKET, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   transitions:  / => s65  ` => s4  DECIMAL => s66  DOLLAR_SIGN => s67  CHAR => s68  NEWLINE => s69  TAB => s70  tabstop => s71  variable => s72  value => s73  shell => s74

state 53:
   variable   -> DOLLAR_SIGN OPEN_BRACKET varname / . pattern / format / opts CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   variable   -> DOLLAR_SIGN OPEN_BRACKET varname / . pattern / format / CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   pattern    -> . pattern CHAR, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   pattern    -> . pattern NEWLINE, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   pattern    -> . pattern TAB, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   pattern    -> . pattern DECIMAL, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   pattern    -> . pattern DOLLAR_SIGN, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   pattern    -> . pattern OPEN_PAREN, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   pattern    -> . pattern CLOSE_PAREN, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   pattern    -> . pattern ?, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   pattern    -> . pattern :, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   pattern    -> . CHAR, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   pattern    -> . NEWLINE, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   pattern    -> . TAB, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   pattern    -> . DECIMAL, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   pattern    -> . DOLLAR_SIGN, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   pattern    -> . OPEN_PAREN, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   pattern    -> . CLOSE_PAREN, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   pattern    -> . ?, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   pattern    -> . :, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   transitions:  : => s55  ? => s56  DECIMAL => s57  DOLLAR_SIGN => s58  CHAR => s59  NEWLINE => s60  TAB => s61  OPEN_PAREN => s62  CLOSE_PAREN => s63  pattern => s75

state 54:
   variable   -> DOLLAR_SIGN OPEN_BRACKET varname : . value CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   value      -> . value CHAR, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   value      -> . value NEWLINE, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   value      -> . value TAB, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   value      -> . value DECIMAL, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   value      -> . value /, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   value      -> . value variable, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   value      -> . value shell, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   value      -> . value tabstop, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   value      -> . CHAR, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   value      -> . NEWLINE, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   value      -> . TAB, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   value      -> . DECIMAL, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   value      -> . /, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   value      -> . variable, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   value      -> . shell, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   value      -> . tabstop, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   variable   -> . DOLLAR_SIGN varname, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   variable   -> . DOLLAR_SIGN OPEN_BRACKET varname : value CLOSE_BRACKET, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   variable   -> . DOLLAR_SIGN OPEN_BRACKET varname / pattern / format / opts CLOSE_BRACKET, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   variable   -> . DOLLAR_SIGN OPEN_BRACKET varname / pattern / format / CLOSE_BRACKET, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   shell      -> . ` shell_text `, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   tabstop    -> . DOLLAR_SIGN DECIMAL, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   tabstop    -> . DOLLAR_SIGN OPEN_BRACKET DECIMAL : value CLOSE_BRACKET, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   transitions:  / => s65  ` => s4  DECIMAL => s66  DOLLAR_SIGN => s67  CHAR => s68  NEWLINE => s69  TAB => s70  tabstop => s71  variable => s72  value => s76  shell => s74

state 55:
   pattern    -> : ., / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?

state 56:
   pattern    -> ? ., / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?

state 57:
   pattern    -> DECIMAL ., / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?

state 58:
   pattern    -> DOLLAR_SIGN ., / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?

state 59:
   pattern    -> CHAR ., / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?

state 60:
   pattern    -> NEWLINE ., / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?

state 61:
   pattern    -> TAB ., / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?

state 62:
   pattern    -> OPEN_PAREN ., / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?

state 63:
   pattern    -> CLOSE_PAREN ., / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?

state 64:
   transform  -> DOLLAR_SIGN OPEN_BRACKET DECIMAL / pattern . / format / opts CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   transform  -> DOLLAR_SIGN OPEN_BRACKET DECIMAL / pattern . / format / CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   pattern    -> pattern . CHAR, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   pattern    -> pattern . NEWLINE, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   pattern    -> pattern . TAB, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   pattern    -> pattern . DECIMAL, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   pattern    -> pattern . DOLLAR_SIGN, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   pattern    -> pattern . OPEN_PAREN, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   pattern    -> pattern . CLOSE_PAREN, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   pattern    -> pattern . ?, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   pattern    -> pattern . :, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   transitions:  / => s77  : => s78  ? => s79  DECIMAL => s80  DOLLAR_SIGN => s81  CHAR => s82  NEWLINE => s83  TAB => s84  OPEN_PAREN => s85  CLOSE_PAREN => s86

state 65:
   value      -> / ., / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `

state 66:
   value      -> DECIMAL ., / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `

state 67:
   variable   -> DOLLAR_SIGN . varname, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   variable   -> DOLLAR_SIGN . OPEN_BRACKET varname : value CLOSE_BRACKET, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   variable   -> DOLLAR_SIGN . OPEN_BRACKET varname / pattern / format / opts CLOSE_BRACKET, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   variable   -> DOLLAR_SIGN . OPEN_BRACKET varname / pattern / format / CLOSE_BRACKET, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   tabstop    -> DOLLAR_SIGN . DECIMAL, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   tabstop    -> DOLLAR_SIGN . OPEN_BRACKET DECIMAL : value CLOSE_BRACKET, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   varname    -> . VARNAME, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   transitions:  DECIMAL => s25  VARNAME => s26  OPEN_BRACKET => s87  varname => s28

state 68:
   value      -> CHAR ., / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `

state 69:
   value      -> NEWLINE ., / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `

state 70:
   value      -> TAB ., / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `

state 71:
   value      -> tabstop ., / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `

state 72:
   value      -> variable ., / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `

state 73:
   tabstop    -> DOLLAR_SIGN OPEN_BRACKET DECIMAL : value . CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   value      -> value . CHAR, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   value      -> value . NEWLINE, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   value      -> value . TAB, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   value      -> value . DECIMAL, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   value      -> value . /, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   value      -> value . variable, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   value      -> value . shell, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   value      -> value . tabstop, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   variable   -> . DOLLAR_SIGN varname, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   variable   -> . DOLLAR_SIGN OPEN_BRACKET varname : value CLOSE_BRACKET, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   variable   -> . DOLLAR_SIGN OPEN_BRACKET varname / pattern / format / opts CLOSE_BRACKET, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   variable   -> . DOLLAR_SIGN OPEN_BRACKET varname / pattern / format / CLOSE_BRACKET, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   shell      -> . ` shell_text `, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   tabstop    -> . DOLLAR_SIGN DECIMAL, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   tabstop    -> . DOLLAR_SIGN OPEN_BRACKET DECIMAL : value CLOSE_BRACKET, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   transitions:  / => s88  ` => s4  DECIMAL => s89  DOLLAR_SIGN => s67  CHAR => s90  NEWLINE => s91  TAB => s92  CLOSE_BRACKET => s93  tabstop => s94  variable => s95  shell => s96

state 74:
   value      -> shell ., / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `

state 75:
   variable   -> DOLLAR_SIGN OPEN_BRACKET varname / pattern . / format / opts CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   variable   -> DOLLAR_SIGN OPEN_BRACKET varname / pattern . / format / CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   pattern    -> pattern . CHAR, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   pattern    -> pattern . NEWLINE, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   pattern    -> pattern . TAB, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   pattern    -> pattern . DECIMAL, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   pattern    -> pattern . DOLLAR_SIGN, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   pattern    -> pattern . OPEN_PAREN, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   pattern    -> pattern . CLOSE_PAREN, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   pattern    -> pattern . ?, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   pattern    -> pattern . :, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   transitions:  / => s97  : => s78  ? => s79  DECIMAL => s80  DOLLAR_SIGN => s81  CHAR => s82  NEWLINE => s83  TAB => s84  OPEN_PAREN => s85  CLOSE_PAREN => s86

state 76:
   variable   -> DOLLAR_SIGN OPEN_BRACKET varname : value . CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   value      -> value . CHAR, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   value      -> value . NEWLINE, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   value      -> value . TAB, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   value      -> value . DECIMAL, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   value      -> value . /, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   value      -> value . variable, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   value      -> value . shell, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   value      -> value . tabstop, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   variable   -> . DOLLAR_SIGN varname, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   variable   -> . DOLLAR_SIGN OPEN_BRACKET varname : value CLOSE_BRACKET, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   variable   -> . DOLLAR_SIGN OPEN_BRACKET varname / pattern / format / opts CLOSE_BRACKET, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   variable   -> . DOLLAR_SIGN OPEN_BRACKET varname / pattern / format / CLOSE_BRACKET, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   shell      -> . ` shell_text `, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   tabstop    -> . DOLLAR_SIGN DECIMAL, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   tabstop    -> . DOLLAR_SIGN OPEN_BRACKET DECIMAL : value CLOSE_BRACKET, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   transitions:  / => s88  ` => s4  DECIMAL => s89  DOLLAR_SIGN => s67  CHAR => s90  NEWLINE => s91  TAB => s92  CLOSE_BRACKET => s98  tabstop => s94  variable => s95  shell => s96

state 77:
   transform  -> DOLLAR_SIGN OPEN_BRACKET DECIMAL / pattern / . format / opts CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   transform  -> DOLLAR_SIGN OPEN_BRACKET DECIMAL / pattern / . format / CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   format     -> . format CHAR, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . format NEWLINE, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . format TAB, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . format DECIMAL, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . format ?, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . format case_fold, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . format cond_insert, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . format DOLLAR_SIGN DECIMAL, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . CHAR, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . NEWLINE, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . TAB, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . DECIMAL, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . ?, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . case_fold, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . cond_insert, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . DOLLAR_SIGN DECIMAL, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   case_fold  -> . LOWER format, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   case_fold  -> . UPPER format, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   case_fold  -> . LOWER_BLOCK format END_BLOCK, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   case_fold  -> . UPPER_BLOCK format END_BLOCK, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   cond_insert -> . OPEN_PAREN ? DECIMAL : format CLOSE_PAREN, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   cond_insert -> . OPEN_PAREN ? DECIMAL : format : format CLOSE_PAREN, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   transitions:  ? => s99  DECIMAL => s100  DOLLAR_SIGN => s101  CHAR => s102  LOWER => s103  UPPER => s104  LOWER_BLOCK => s105  UPPER_BLOCK => s106  NEWLINE => s107  TAB => s108  OPEN_PAREN => s109  format => s110  case_fold => s111  cond_insert => s112

state 78:
   pattern    -> pattern : ., / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?

state 79:
   pattern    -> pattern ? ., / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?

state 80:
   pattern    -> pattern DECIMAL ., / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?

state 81:
   pattern    -> pattern DOLLAR_SIGN ., / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?

state 82:
   pattern    -> pattern CHAR ., / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?

state 83:
   pattern    -> pattern NEWLINE ., / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?

state 84:
   pattern    -> pattern TAB ., / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?

state 85:
   pattern    -> pattern OPEN_PAREN ., / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?

state 86:
   pattern    -> pattern CLOSE_PAREN ., / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?

state 87:
   variable   -> DOLLAR_SIGN OPEN_BRACKET . varname : value CLOSE_BRACKET, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   variable   -> DOLLAR_SIGN OPEN_BRACKET . varname / pattern / format / opts CLOSE_BRACKET, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   variable   -> DOLLAR_SIGN OPEN_BRACKET . varname / pattern / format / CLOSE_BRACKET, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   tabstop    -> DOLLAR_SIGN OPEN_BRACKET . DECIMAL : value CLOSE_BRACKET, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   varname    -> . VARNAME, / :
   transitions:  DECIMAL => s113  VARNAME => s26  varname => s50

state 88:
   value      -> value / ., / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `

state 89:
   value      -> value DECIMAL ., / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `

state 90:
   value      -> value CHAR ., / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `

state 91:
   value      -> value NEWLINE ., / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `

state 92:
   value      -> value TAB ., / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `

state 93:
   tabstop    -> DOLLAR_SIGN OPEN_BRACKET DECIMAL : value CLOSE_BRACKET ., / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `

state 94:
   value      -> value tabstop ., / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `

state 95:
   value      -> value variable ., / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `

state 96:
   value      -> value shell ., / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `

state 97:
   variable   -> DOLLAR_SIGN OPEN_BRACKET varname / pattern / . format / opts CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   variable   -> DOLLAR_SIGN OPEN_BRACKET varname / pattern / . format / CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   format     -> . format CHAR, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . format NEWLINE, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . format TAB, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . format DECIMAL, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . format ?, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . format case_fold, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . format cond_insert, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . format DOLLAR_SIGN DECIMAL, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . CHAR, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . NEWLINE, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . TAB, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . DECIMAL, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . ?, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . case_fold, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . cond_insert, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . DOLLAR_SIGN DECIMAL, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   case_fold  -> . LOWER format, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   case_fold  -> . UPPER format, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   case_fold  -> . LOWER_BLOCK format END_BLOCK, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   case_fold  -> . UPPER_BLOCK format END_BLOCK, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   cond_insert -> . OPEN_PAREN ? DECIMAL : format CLOSE_PAREN, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   cond_insert -> . OPEN_PAREN ? DECIMAL : format : format CLOSE_PAREN, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   transitions:  ? => s99  DECIMAL => s100  DOLLAR_SIGN => s101  CHAR => s102  LOWER => s103  UPPER => s104  LOWER_BLOCK => s105  UPPER_BLOCK => s106  NEWLINE => s107  TAB => s108  OPEN_PAREN => s109  format => s114  case_fold => s111  cond_insert => s112

state 98:
   variable   -> DOLLAR_SIGN OPEN_BRACKET varname : value CLOSE_BRACKET ., / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `

state 99:
   format     -> ? ., / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?

state 100:
   format     -> DECIMAL ., / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?

state 101:
   format     -> DOLLAR_SIGN . DECIMAL, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   transitions:  DECIMAL => s115

state 102:
   format     -> CHAR ., / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?

state 103:
   case_fold  -> LOWER . format, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> . format CHAR, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> . format NEWLINE, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> . format TAB, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> . format DECIMAL, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> . format ?, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> . format case_fold, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> . format cond_insert, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> . format DOLLAR_SIGN DECIMAL, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> . CHAR, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> . NEWLINE, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> . TAB, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> . DECIMAL, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> . ?, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> . case_fold, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> . cond_insert, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> . DOLLAR_SIGN DECIMAL, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   case_fold  -> . LOWER format, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   case_fold  -> . UPPER format, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   case_fold  -> . LOWER_BLOCK format END_BLOCK, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   case_fold  -> . UPPER_BLOCK format END_BLOCK, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   cond_insert -> . OPEN_PAREN ? DECIMAL : format CLOSE_PAREN, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   cond_insert -> . OPEN_PAREN ? DECIMAL : format : format CLOSE_PAREN, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   transitions:  ? => s99  DECIMAL => s100  DOLLAR_SIGN => s101  CHAR => s102  LOWER => s103  UPPER => s104  LOWER_BLOCK => s105  UPPER_BLOCK => s106  NEWLINE => s107  TAB => s108  OPEN_PAREN => s109  format => s116  case_fold => s111  cond_insert => s112

state 104:
   case_fold  -> UPPER . format, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> . format CHAR, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> . format NEWLINE, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> . format TAB, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> . format DECIMAL, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> . format ?, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> . format case_fold, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> . format cond_insert, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> . format DOLLAR_SIGN DECIMAL, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> . CHAR, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> . NEWLINE, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> . TAB, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> . DECIMAL, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> . ?, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> . case_fold, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> . cond_insert, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> . DOLLAR_SIGN DECIMAL, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   case_fold  -> . LOWER format, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   case_fold  -> . UPPER format, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   case_fold  -> . LOWER_BLOCK format END_BLOCK, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   case_fold  -> . UPPER_BLOCK format END_BLOCK, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   cond_insert -> . OPEN_PAREN ? DECIMAL : format CLOSE_PAREN, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   cond_insert -> . OPEN_PAREN ? DECIMAL : format : format CLOSE_PAREN, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   transitions:  ? => s99  DECIMAL => s100  DOLLAR_SIGN => s101  CHAR => s102  LOWER => s103  UPPER => s104  LOWER_BLOCK => s105  UPPER_BLOCK => s106  NEWLINE => s107  TAB => s108  OPEN_PAREN => s109  format => s117  case_fold => s111  cond_insert => s112

state 105:
   case_fold  -> LOWER_BLOCK . format END_BLOCK, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> . format CHAR, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . format NEWLINE, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . format TAB, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . format DECIMAL, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . format ?, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . format case_fold, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . format cond_insert, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . format DOLLAR_SIGN DECIMAL, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . CHAR, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . NEWLINE, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . TAB, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . DECIMAL, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . ?, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . case_fold, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . cond_insert, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . DOLLAR_SIGN DECIMAL, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   case_fold  -> . LOWER format, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   case_fold  -> . UPPER format, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   case_fold  -> . LOWER_BLOCK format END_BLOCK, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   case_fold  -> . UPPER_BLOCK format END_BLOCK, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   cond_insert -> . OPEN_PAREN ? DECIMAL : format CLOSE_PAREN, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   cond_insert -> . OPEN_PAREN ? DECIMAL : format : format CLOSE_PAREN, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   transitions:  ? => s99  DECIMAL => s100  DOLLAR_SIGN => s101  CHAR => s102  LOWER => s103  UPPER => s104  LOWER_BLOCK => s105  UPPER_BLOCK => s106  NEWLINE => s107  TAB => s108  OPEN_PAREN => s109  format => s118  case_fold => s111  cond_insert => s112

state 106:
   case_fold  -> UPPER_BLOCK . format END_BLOCK, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> . format CHAR, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . format NEWLINE, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . format TAB, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . format DECIMAL, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . format ?, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . format case_fold, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . format cond_insert, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . format DOLLAR_SIGN DECIMAL, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . CHAR, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . NEWLINE, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . TAB, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . DECIMAL, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . ?, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . case_fold, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . cond_insert, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> . DOLLAR_SIGN DECIMAL, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   case_fold  -> . LOWER format, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   case_fold  -> . UPPER format, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   case_fold  -> . LOWER_BLOCK format END_BLOCK, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   case_fold  -> . UPPER_BLOCK format END_BLOCK, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   cond_insert -> . OPEN_PAREN ? DECIMAL : format CLOSE_PAREN, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   cond_insert -> . OPEN_PAREN ? DECIMAL : format : format CLOSE_PAREN, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   transitions:  ? => s99  DECIMAL => s100  DOLLAR_SIGN => s101  CHAR => s102  LOWER => s103  UPPER => s104  LOWER_BLOCK => s105  UPPER_BLOCK => s106  NEWLINE => s107  TAB => s108  OPEN_PAREN => s109  format => s119  case_fold => s111  cond_insert => s112

state 107:
   format     -> NEWLINE ., / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?

state 108:
   format     -> TAB ., / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?

state 109:
   cond_insert -> OPEN_PAREN . ? DECIMAL : format CLOSE_PAREN, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   cond_insert -> OPEN_PAREN . ? DECIMAL : format : format CLOSE_PAREN, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   transitions:  ? => s120

state 110:
   transform  -> DOLLAR_SIGN OPEN_BRACKET DECIMAL / pattern / format . / opts CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   transform  -> DOLLAR_SIGN OPEN_BRACKET DECIMAL / pattern / format . / CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   format     -> format . CHAR, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> format . NEWLINE, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> format . TAB, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> format . DECIMAL, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> format . ?, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> format . case_fold, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> format . cond_insert, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> format . DOLLAR_SIGN DECIMAL, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   case_fold  -> . LOWER format, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   case_fold  -> . UPPER format, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   case_fold  -> . LOWER_BLOCK format END_BLOCK, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   case_fold  -> . UPPER_BLOCK format END_BLOCK, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   cond_insert -> . OPEN_PAREN ? DECIMAL : format CLOSE_PAREN, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   cond_insert -> . OPEN_PAREN ? DECIMAL : format : format CLOSE_PAREN, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   transitions:  / => s121  ? => s122  DECIMAL => s123  DOLLAR_SIGN => s124  CHAR => s125  LOWER => s103  UPPER => s104  LOWER_BLOCK => s105  UPPER_BLOCK => s106  NEWLINE => s126  TAB => s127  OPEN_PAREN => s109  case_fold => s128  cond_insert => s129

state 111:
   format     -> case_fold ., / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?

state 112:
   format     -> cond_insert ., / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?

state 113:
   tabstop    -> DOLLAR_SIGN OPEN_BRACKET DECIMAL . : value CLOSE_BRACKET, / DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB CLOSE_BRACKET `
   transitions:  : => s52

state 114:
   variable   -> DOLLAR_SIGN OPEN_BRACKET varname / pattern / format . / opts CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   variable   -> DOLLAR_SIGN OPEN_BRACKET varname / pattern / format . / CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   format     -> format . CHAR, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> format . NEWLINE, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> format . TAB, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> format . DECIMAL, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> format . ?, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> format . case_fold, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> format . cond_insert, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> format . DOLLAR_SIGN DECIMAL, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   case_fold  -> . LOWER format, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   case_fold  -> . UPPER format, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   case_fold  -> . LOWER_BLOCK format END_BLOCK, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   case_fold  -> . UPPER_BLOCK format END_BLOCK, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   cond_insert -> . OPEN_PAREN ? DECIMAL : format CLOSE_PAREN, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   cond_insert -> . OPEN_PAREN ? DECIMAL : format : format CLOSE_PAREN, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN ?
   transitions:  / => s130  ? => s122  DECIMAL => s123  DOLLAR_SIGN => s124  CHAR => s125  LOWER => s103  UPPER => s104  LOWER_BLOCK => s105  UPPER_BLOCK => s106  NEWLINE => s126  TAB => s127  OPEN_PAREN => s109  case_fold => s128  cond_insert => s129

state 115:
   format     -> DOLLAR_SIGN DECIMAL ., / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?

state 116:
   case_fold  -> LOWER format ., / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> format . CHAR, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> format . NEWLINE, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> format . TAB, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> format . DECIMAL, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> format . ?, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> format . case_fold, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> format . cond_insert, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> format . DOLLAR_SIGN DECIMAL, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   case_fold  -> . LOWER format, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   case_fold  -> . UPPER format, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   case_fold  -> . LOWER_BLOCK format END_BLOCK, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   case_fold  -> . UPPER_BLOCK format END_BLOCK, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   cond_insert -> . OPEN_PAREN ? DECIMAL : format CLOSE_PAREN, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   cond_insert -> . OPEN_PAREN ? DECIMAL : format : format CLOSE_PAREN, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   transitions:  ? => s122  DECIMAL => s123  DOLLAR_SIGN => s124  CHAR => s125  LOWER => s103  UPPER => s104  LOWER_BLOCK => s105  UPPER_BLOCK => s106  NEWLINE => s126  TAB => s127  OPEN_PAREN => s109  case_fold => s128  cond_insert => s129

state 117:
   case_fold  -> UPPER format ., / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> format . CHAR, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> format . NEWLINE, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> format . TAB, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> format . DECIMAL, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> format . ?, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> format . case_fold, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> format . cond_insert, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> format . DOLLAR_SIGN DECIMAL, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   case_fold  -> . LOWER format, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   case_fold  -> . UPPER format, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   case_fold  -> . LOWER_BLOCK format END_BLOCK, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   case_fold  -> . UPPER_BLOCK format END_BLOCK, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   cond_insert -> . OPEN_PAREN ? DECIMAL : format CLOSE_PAREN, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   cond_insert -> . OPEN_PAREN ? DECIMAL : format : format CLOSE_PAREN, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   transitions:  ? => s122  DECIMAL => s123  DOLLAR_SIGN => s124  CHAR => s125  LOWER => s103  UPPER => s104  LOWER_BLOCK => s105  UPPER_BLOCK => s106  NEWLINE => s126  TAB => s127  OPEN_PAREN => s109  case_fold => s128  cond_insert => s129

state 118:
   case_fold  -> LOWER_BLOCK format . END_BLOCK, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> format . CHAR, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> format . NEWLINE, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> format . TAB, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> format . DECIMAL, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> format . ?, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> format . case_fold, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> format . cond_insert, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> format . DOLLAR_SIGN DECIMAL, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   case_fold  -> . LOWER format, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   case_fold  -> . UPPER format, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   case_fold  -> . LOWER_BLOCK format END_BLOCK, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   case_fold  -> . UPPER_BLOCK format END_BLOCK, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   cond_insert -> . OPEN_PAREN ? DECIMAL : format CLOSE_PAREN, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   cond_insert -> . OPEN_PAREN ? DECIMAL : format : format CLOSE_PAREN, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   transitions:  ? => s122  DECIMAL => s123  DOLLAR_SIGN => s124  CHAR => s125  LOWER => s103  UPPER => s104  LOWER_BLOCK => s105  UPPER_BLOCK => s106  END_BLOCK => s131  NEWLINE => s126  TAB => s127  OPEN_PAREN => s109  case_fold => s128  cond_insert => s129

state 119:
   case_fold  -> UPPER_BLOCK format . END_BLOCK, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> format . CHAR, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> format . NEWLINE, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> format . TAB, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> format . DECIMAL, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> format . ?, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> format . case_fold, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> format . cond_insert, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   format     -> format . DOLLAR_SIGN DECIMAL, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   case_fold  -> . LOWER format, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   case_fold  -> . UPPER format, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   case_fold  -> . LOWER_BLOCK format END_BLOCK, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   case_fold  -> . UPPER_BLOCK format END_BLOCK, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   cond_insert -> . OPEN_PAREN ? DECIMAL : format CLOSE_PAREN, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   cond_insert -> . OPEN_PAREN ? DECIMAL : format : format CLOSE_PAREN, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN ?
   transitions:  ? => s122  DECIMAL => s123  DOLLAR_SIGN => s124  CHAR => s125  LOWER => s103  UPPER => s104  LOWER_BLOCK => s105  UPPER_BLOCK => s106  END_BLOCK => s132  NEWLINE => s126  TAB => s127  OPEN_PAREN => s109  case_fold => s128  cond_insert => s129

state 120:
   cond_insert -> OPEN_PAREN ? . DECIMAL : format CLOSE_PAREN, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   cond_insert -> OPEN_PAREN ? . DECIMAL : format : format CLOSE_PAREN, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   transitions:  DECIMAL => s133

state 121:
   transform  -> DOLLAR_SIGN OPEN_BRACKET DECIMAL / pattern / format / . opts CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   transform  -> DOLLAR_SIGN OPEN_BRACKET DECIMAL / pattern / format / . CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   opts       -> . opts CHAR, CHAR CLOSE_BRACKET
   opts       -> . CHAR, CHAR CLOSE_BRACKET
   transitions:  CHAR => s134  CLOSE_BRACKET => s135  opts => s136

state 122:
   format     -> format ? ., / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?

state 123:
   format     -> format DECIMAL ., / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?

state 124:
   format     -> format DOLLAR_SIGN . DECIMAL, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   transitions:  DECIMAL => s137

state 125:
   format     -> format CHAR ., / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?

state 126:
   format     -> format NEWLINE ., / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?

state 127:
   format     -> format TAB ., / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?

state 128:
   format     -> format case_fold ., / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?

state 129:
   format     -> format cond_insert ., / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?

state 130:
   variable   -> DOLLAR_SIGN OPEN_BRACKET varname / pattern / format / . opts CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   variable   -> DOLLAR_SIGN OPEN_BRACKET varname / pattern / format / . CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   opts       -> . opts CHAR, CHAR CLOSE_BRACKET
   opts       -> . CHAR, CHAR CLOSE_BRACKET
   transitions:  CHAR => s134  CLOSE_BRACKET => s138  opts => s139

state 131:
   case_fold  -> LOWER_BLOCK format END_BLOCK ., / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?

state 132:
   case_fold  -> UPPER_BLOCK format END_BLOCK ., / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?

state 133:
   cond_insert -> OPEN_PAREN ? DECIMAL . : format CLOSE_PAREN, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   cond_insert -> OPEN_PAREN ? DECIMAL . : format : format CLOSE_PAREN, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   transitions:  : => s140

state 134:
   opts       -> CHAR ., CHAR CLOSE_BRACKET

state 135:
   transform  -> DOLLAR_SIGN OPEN_BRACKET DECIMAL / pattern / format / CLOSE_BRACKET ., / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `

state 136:
   transform  -> DOLLAR_SIGN OPEN_BRACKET DECIMAL / pattern / format / opts . CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   opts       -> opts . CHAR, CHAR CLOSE_BRACKET
   transitions:  CHAR => s141  CLOSE_BRACKET => s142

state 137:
   format     -> format DOLLAR_SIGN DECIMAL ., / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?

state 138:
   variable   -> DOLLAR_SIGN OPEN_BRACKET varname / pattern / format / CLOSE_BRACKET ., / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `

state 139:
   variable   -> DOLLAR_SIGN OPEN_BRACKET varname / pattern / format / opts . CLOSE_BRACKET, / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `
   opts       -> opts . CHAR, CHAR CLOSE_BRACKET
   transitions:  CHAR => s141  CLOSE_BRACKET => s143

state 140:
   cond_insert -> OPEN_PAREN ? DECIMAL : . format CLOSE_PAREN, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   cond_insert -> OPEN_PAREN ? DECIMAL : . format : format CLOSE_PAREN, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> . format CHAR, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> . format NEWLINE, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> . format TAB, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> . format DECIMAL, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> . format ?, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> . format case_fold, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> . format cond_insert, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> . format DOLLAR_SIGN DECIMAL, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> . CHAR, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> . NEWLINE, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> . TAB, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> . DECIMAL, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> . ?, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> . case_fold, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> . cond_insert, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> . DOLLAR_SIGN DECIMAL, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   case_fold  -> . LOWER format, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   case_fold  -> . UPPER format, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   case_fold  -> . LOWER_BLOCK format END_BLOCK, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   case_fold  -> . UPPER_BLOCK format END_BLOCK, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   cond_insert -> . OPEN_PAREN ? DECIMAL : format CLOSE_PAREN, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   cond_insert -> . OPEN_PAREN ? DECIMAL : format : format CLOSE_PAREN, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   transitions:  ? => s99  DECIMAL => s100  DOLLAR_SIGN => s101  CHAR => s102  LOWER => s103  UPPER => s104  LOWER_BLOCK => s105  UPPER_BLOCK => s106  NEWLINE => s107  TAB => s108  OPEN_PAREN => s109  format => s144  case_fold => s111  cond_insert => s112

state 141:
   opts       -> opts CHAR ., CHAR CLOSE_BRACKET

state 142:
   transform  -> DOLLAR_SIGN OPEN_BRACKET DECIMAL / pattern / format / opts CLOSE_BRACKET ., / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `

state 143:
   variable   -> DOLLAR_SIGN OPEN_BRACKET varname / pattern / format / opts CLOSE_BRACKET ., / {$} DECIMAL DOLLAR_SIGN CHAR NEWLINE TAB OPEN_BRACKET CLOSE_BRACKET OPEN_PAREN CLOSE_PAREN : ? `

state 144:
   cond_insert -> OPEN_PAREN ? DECIMAL : format . CLOSE_PAREN, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   cond_insert -> OPEN_PAREN ? DECIMAL : format . : format CLOSE_PAREN, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> format . CHAR, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> format . NEWLINE, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> format . TAB, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> format . DECIMAL, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> format . ?, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> format . case_fold, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> format . cond_insert, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> format . DOLLAR_SIGN DECIMAL, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   case_fold  -> . LOWER format, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   case_fold  -> . UPPER format, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   case_fold  -> . LOWER_BLOCK format END_BLOCK, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   case_fold  -> . UPPER_BLOCK format END_BLOCK, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   cond_insert -> . OPEN_PAREN ? DECIMAL : format CLOSE_PAREN, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   cond_insert -> . OPEN_PAREN ? DECIMAL : format : format CLOSE_PAREN, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   transitions:  : => s145  ? => s122  DECIMAL => s123  DOLLAR_SIGN => s124  CHAR => s125  LOWER => s103  UPPER => s104  LOWER_BLOCK => s105  UPPER_BLOCK => s106  NEWLINE => s126  TAB => s127  OPEN_PAREN => s109  CLOSE_PAREN => s146  case_fold => s128  cond_insert => s129

state 145:
   cond_insert -> OPEN_PAREN ? DECIMAL : format : . format CLOSE_PAREN, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> . format CHAR, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN ?
   format     -> . format NEWLINE, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN ?
   format     -> . format TAB, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN ?
   format     -> . format DECIMAL, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN ?
   format     -> . format ?, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN ?
   format     -> . format case_fold, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN ?
   format     -> . format cond_insert, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN ?
   format     -> . format DOLLAR_SIGN DECIMAL, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN ?
   format     -> . CHAR, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN ?
   format     -> . NEWLINE, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN ?
   format     -> . TAB, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN ?
   format     -> . DECIMAL, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN ?
   format     -> . ?, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN ?
   format     -> . case_fold, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN ?
   format     -> . cond_insert, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN ?
   format     -> . DOLLAR_SIGN DECIMAL, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN ?
   case_fold  -> . LOWER format, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN ?
   case_fold  -> . UPPER format, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN ?
   case_fold  -> . LOWER_BLOCK format END_BLOCK, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN ?
   case_fold  -> . UPPER_BLOCK format END_BLOCK, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN ?
   cond_insert -> . OPEN_PAREN ? DECIMAL : format CLOSE_PAREN, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN ?
   cond_insert -> . OPEN_PAREN ? DECIMAL : format : format CLOSE_PAREN, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN ?
   transitions:  ? => s99  DECIMAL => s100  DOLLAR_SIGN => s101  CHAR => s102  LOWER => s103  UPPER => s104  LOWER_BLOCK => s105  UPPER_BLOCK => s106  NEWLINE => s107  TAB => s108  OPEN_PAREN => s109  format => s147  case_fold => s111  cond_insert => s112

state 146:
   cond_insert -> OPEN_PAREN ? DECIMAL : format CLOSE_PAREN ., / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?

state 147:
   cond_insert -> OPEN_PAREN ? DECIMAL : format : format . CLOSE_PAREN, / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?
   format     -> format . CHAR, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN ?
   format     -> format . NEWLINE, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN ?
   format     -> format . TAB, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN ?
   format     -> format . DECIMAL, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN ?
   format     -> format . ?, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN ?
   format     -> format . case_fold, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN ?
   format     -> format . cond_insert, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN ?
   format     -> format . DOLLAR_SIGN DECIMAL, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN ?
   case_fold  -> . LOWER format, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN ?
   case_fold  -> . UPPER format, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN ?
   case_fold  -> . LOWER_BLOCK format END_BLOCK, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN ?
   case_fold  -> . UPPER_BLOCK format END_BLOCK, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN ?
   cond_insert -> . OPEN_PAREN ? DECIMAL : format CLOSE_PAREN, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN ?
   cond_insert -> . OPEN_PAREN ? DECIMAL : format : format CLOSE_PAREN, DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN ?
   transitions:  ? => s122  DECIMAL => s123  DOLLAR_SIGN => s124  CHAR => s125  LOWER => s103  UPPER => s104  LOWER_BLOCK => s105  UPPER_BLOCK => s106  NEWLINE => s126  TAB => s127  OPEN_PAREN => s109  CLOSE_PAREN => s148  case_fold => s128  cond_insert => s129

state 148:
   cond_insert -> OPEN_PAREN ? DECIMAL : format : format CLOSE_PAREN ., / DECIMAL DOLLAR_SIGN CHAR LOWER UPPER LOWER_BLOCK UPPER_BLOCK END_BLOCK NEWLINE TAB OPEN_PAREN CLOSE_PAREN : ?

generated lalr(1) parse table:
state  /     :     ?     `     error DECIM DOLLA VARNA CHAR  LOWER UPPER LOWER UPPER END_B NEWLI TAB   OPEN_ CLOSE OPEN_ CLOSE main  snipp tabst trans varia varna patte opts  value text  shell shell forma case_ cond_ $    
   0   sh1   sh2   sh3   sh4         sh5   sh6         sh7                                 sh8   sh9   sh10  sh11  sh12  sh13  go14  go15  go16  go17  go18                          go19  go20                               
   1   re72  re72  re72  re72        re72  re72        re72                                re72  re72  re72  re72  re72  re72                                                                                            re72 
   2   re76  re76  re76  re76        re76  re76        re76                                re76  re76  re76  re76  re76  re76                                                                                            re76 
   3   re75  re75  re75  re75        re75  re75        re75                                re75  re75  re75  re75  re75  re75                                                                                            re75 
   4   sh1   sh2   sh3               sh5   sh21        sh7                                 sh8   sh9   sh10  sh11  sh12  sh13                          go22                          go23        go24                         
   5   re71  re71  re71  re71        re71  re71        re71                                re71  re71  re71  re71  re71  re71                                                                                            re71 
   6                                 sh25        sh26                                                  sh27                                                  go28                                                             
   7   re68  re68  re68  re68        re68  re68        re68                                re68  re68  re68  re68  re68  re68                                                                                            re68 
   8   re69  re69  re69  re69        re69  re69        re69                                re69  re69  re69  re69  re69  re69                                                                                            re69 
   9   re70  re70  re70  re70        re70  re70        re70                                re70  re70  re70  re70  re70  re70                                                                                            re70 
  10   re77  re77  re77  re77        re77  re77        re77                                re77  re77  re77  re77  re77  re77                                                                                            re77 
  11   re78  re78  re78  re78        re78  re78        re78                                re78  re78  re78  re78  re78  re78                                                                                            re78 
  12   re73  re73  re73  re73        re73  re73        re73                                re73  re73  re73  re73  re73  re73                                                                                            re73 
  13   re74  re74  re74  re74        re74  re74        re74                                re74  re74  re74  re74  re74  re74                                                                                            re74 
  14                                                                                                                                                                                                                     accept
  15   sh1   sh2   sh3   sh4         sh5   sh6         sh7                                 sh8   sh9   sh10  sh11  sh12  sh13              go29  go30  go31                          go32  go33                          re1  
  16   re10  re10  re10  re10        re10  re10        re10                                re10  re10  re10  re10  re10  re10                                                                                            re10 
  17   re9   re9   re9   re9         re9   re9         re9                                 re9   re9   re9   re9   re9   re9                                                                                             re9  
  18   re8   re8   re8   re8         re8   re8         re8                                 re8   re8   re8   re8   re8   re8                                                                                             re8  
  19   sh34  sh35  sh36  re7         sh37  re7         sh38                                sh39  sh40  sh41  sh42  sh43  sh44                                                                                            re7  
  20   re11  re11  re11  re11        re11  re11        re11                                re11  re11  re11  re11  re11  re11                                                                                            re11 
  21                                             sh26                                                  sh45                                                  go28                                                             
  22   re83  re83  re83  re83        re83  re83        re83                                re83  re83  re83  re83  re83  re83                                                                                                 
  23   sh34  sh35  sh36  re82        sh37  re82        sh38                                sh39  sh40  sh41  sh42  sh43  sh44                                                                                                 
  24   sh1   sh2   sh3   sh46        sh5   sh21        sh7                                 sh8   sh9   sh10  sh11  sh12  sh13                          go47                          go48                                     
  25   re12  re12  re12  re12        re12  re12        re12                                re12  re12  re12  re12  re12  re12                                                                                            re12 
  26   re20  re20  re20  re20        re20  re20        re20                                re20  re20  re20  re20  re20  re20                                                                                            re20 
  27                                 sh49        sh26                                                                                                        go50                                                             
  28   re16  re16  re16  re16        re16  re16        re16                                re16  re16  re16  re16  re16  re16                                                                                            re16 
  29   re5   re5   re5   re5         re5   re5         re5                                 re5   re5   re5   re5   re5   re5                                                                                             re5  
  30   re4   re4   re4   re4         re4   re4         re4                                 re4   re4   re4   re4   re4   re4                                                                                             re4  
  31   re3   re3   re3   re3         re3   re3         re3                                 re3   re3   re3   re3   re3   re3                                                                                             re3  
  32   sh34  sh35  sh36  re2         sh37  re2         sh38                                sh39  sh40  sh41  sh42  sh43  sh44                                                                                            re2  
  33   re6   re6   re6   re6         re6   re6         re6                                 re6   re6   re6   re6   re6   re6                                                                                             re6  
  34   re61  re61  re61  re61        re61  re61        re61                                re61  re61  re61  re61  re61  re61                                                                                            re61 
  35   re65  re65  re65  re65        re65  re65        re65                                re65  re65  re65  re65  re65  re65                                                                                            re65 
  36   re64  re64  re64  re64        re64  re64        re64                                re64  re64  re64  re64  re64  re64                                                                                            re64 
  37   re60  re60  re60  re60        re60  re60        re60                                re60  re60  re60  re60  re60  re60                                                                                            re60 
  38   re57  re57  re57  re57        re57  re57        re57                                re57  re57  re57  re57  re57  re57                                                                                            re57 
  39   re58  re58  re58  re58        re58  re58        re58                                re58  re58  re58  re58  re58  re58                                                                                            re58 
  40   re59  re59  re59  re59        re59  re59        re59                                re59  re59  re59  re59  re59  re59                                                                                            re59 
  41   re66  re66  re66  re66        re66  re66        re66                                re66  re66  re66  re66  re66  re66                                                                                            re66 
  42   re67  re67  re67  re67        re67  re67        re67                                re67  re67  re67  re67  re67  re67                                                                                            re67 
  43   re62  re62  re62  re62        re62  re62        re62                                re62  re62  re62  re62  re62  re62                                                                                            re62 
  44   re63  re63  re63  re63        re63  re63        re63                                re63  re63  re63  re63  re63  re63                                                                                            re63 
  45                                             sh26                                                                                                        go50                                                             
  46   re79  re79  re79  re79        re79  re79        re79                                re79  re79  re79  re79  re79  re79                                                                                            re79 
  47   re81  re81  re81  re81        re81  re81        re81                                re81  re81  re81  re81  re81  re81                                                                                                 
  48   sh34  sh35  sh36  re80        sh37  re80        sh38                                sh39  sh40  sh41  sh42  sh43  sh44                                                                                                 
  49   sh51  sh52                                                                                                                                                                                                             
  50   sh53  sh54                                                                                                                                                                                                             
  51         sh55  sh56              sh57  sh58        sh59                                sh60  sh61              sh62  sh63                                      go64                                                       
  52   sh65              sh4         sh66  sh67        sh68                                sh69  sh70                                      go71        go72                    go73        go74                               
  53         sh55  sh56              sh57  sh58        sh59                                sh60  sh61              sh62  sh63                                      go75                                                       
  54   sh65              sh4         sh66  sh67        sh68                                sh69  sh70                                      go71        go72                    go76        go74                               
  55   re38  re38  re38              re38  re38        re38                                re38  re38              re38  re38                                                                                                 
  56   re37  re37  re37              re37  re37        re37                                re37  re37              re37  re37                                                                                                 
  57   re33  re33  re33              re33  re33        re33                                re33  re33              re33  re33                                                                                                 
  58   re34  re34  re34              re34  re34        re34                                re34  re34              re34  re34                                                                                                 
  59   re30  re30  re30              re30  re30        re30                                re30  re30              re30  re30                                                                                                 
  60   re31  re31  re31              re31  re31        re31                                re31  re31              re31  re31                                                                                                 
  61   re32  re32  re32              re32  re32        re32                                re32  re32              re32  re32                                                                                                 
  62   re35  re35  re35              re35  re35        re35                                re35  re35              re35  re35                                                                                                 
  63   re36  re36  re36              re36  re36        re36                                re36  re36              re36  re36                                                                                                 
  64   sh77  sh78  sh79              sh80  sh81        sh82                                sh83  sh84              sh85  sh86                                                                                                 
  65   re53              re53        re53  re53        re53                                re53  re53        re53                                                                                                             
  66   re52              re52        re52  re52        re52                                re52  re52        re52                                                                                                             
  67                                 sh25        sh26                                                  sh87                                                  go28                                                             
  68   re49              re49        re49  re49        re49                                re49  re49        re49                                                                                                             
  69   re50              re50        re50  re50        re50                                re50  re50        re50                                                                                                             
  70   re51              re51        re51  re51        re51                                re51  re51        re51                                                                                                             
  71   re56              re56        re56  re56        re56                                re56  re56        re56                                                                                                             
  72   re54              re54        re54  re54        re54                                re54  re54        re54                                                                                                             
  73   sh88              sh4         sh89  sh67        sh90                                sh91  sh92        sh93                          go94        go95                                go96                               
  74   re55              re55        re55  re55        re55                                re55  re55        re55                                                                                                             
  75   sh97  sh78  sh79              sh80  sh81        sh82                                sh83  sh84              sh85  sh86                                                                                                 
  76   sh88              sh4         sh89  sh67        sh90                                sh91  sh92        sh98                          go94        go95                                go96                               
  77               sh99              sh100 sh101       sh102 sh103 sh104 sh105 sh106       sh107 sh108             sh109                                                                               go110 go111 go112      
  78   re29  re29  re29              re29  re29        re29                                re29  re29              re29  re29                                                                                                 
  79   re28  re28  re28              re28  re28        re28                                re28  re28              re28  re28                                                                                                 
  80   re24  re24  re24              re24  re24        re24                                re24  re24              re24  re24                                                                                                 
  81   re25  re25  re25              re25  re25        re25                                re25  re25              re25  re25                                                                                                 
  82   re21  re21  re21              re21  re21        re21                                re21  re21              re21  re21                                                                                                 
  83   re22  re22  re22              re22  re22        re22                                re22  re22              re22  re22                                                                                                 
  84   re23  re23  re23              re23  re23        re23                                re23  re23              re23  re23                                                                                                 
  85   re26  re26  re26              re26  re26        re26                                re26  re26              re26  re26                                                                                                 
  86   re27  re27  re27              re27  re27        re27                                re27  re27              re27  re27                                                                                                 
  87                                 sh113       sh26                                                                                                        go50                                                             
  88   re45              re45        re45  re45        re45                                re45  re45        re45                                                                                                             
  89   re44              re44        re44  re44        re44                                re44  re44        re44                                                                                                             
  90   re41              re41        re41  re41        re41                                re41  re41        re41                                                                                                             
  91   re42              re42        re42  re42        re42                                re42  re42        re42                                                                                                             
  92   re43              re43        re43  re43        re43                                re43  re43        re43                                                                                                             
  93   re13  re13  re13  re13        re13  re13        re13                                re13  re13  re13  re13  re13  re13                                                                                            re13 
  94   re48              re48        re48  re48        re48                                re48  re48        re48                                                                                                             
  95   re46              re46        re46  re46        re46                                re46  re46        re46                                                                                                             
  96   re47              re47        re47  re47        re47                                re47  re47        re47                                                                                                             
  97               sh99              sh100 sh101       sh102 sh103 sh104 sh105 sh106       sh107 sh108             sh109                                                                               go114 go111 go112      
  98   re17  re17  re17  re17        re17  re17        re17                                re17  re17  re17  re17  re17  re17                                                                                            re17 
  99   re96  re96  re96              re96  re96        re96  re96  re96  re96  re96  re96  re96  re96              re96  re96                                                                                                 
 100   re95  re95  re95              re95  re95        re95  re95  re95  re95  re95  re95  re95  re95              re95  re95                                                                                                 
 101                                 sh115                                                                                                                                                                                    
 102   re92  re92  re92              re92  re92        re92  re92  re92  re92  re92  re92  re92  re92              re92  re92                                                                                                 
 103               sh99              sh100 sh101       sh102 sh103 sh104 sh105 sh106       sh107 sh108             sh109                                                                               go116 go111 go112      
 104               sh99              sh100 sh101       sh102 sh103 sh104 sh105 sh106       sh107 sh108             sh109                                                                               go117 go111 go112      
 105               sh99              sh100 sh101       sh102 sh103 sh104 sh105 sh106       sh107 sh108             sh109                                                                               go118 go111 go112      
 106               sh99              sh100 sh101       sh102 sh103 sh104 sh105 sh106       sh107 sh108             sh109                                                                               go119 go111 go112      
 107   re93  re93  re93              re93  re93        re93  re93  re93  re93  re93  re93  re93  re93              re93  re93                                                                                                 
 108   re94  re94  re94              re94  re94        re94  re94  re94  re94  re94  re94  re94  re94              re94  re94                                                                                                 
 109               sh120                                                                                                                                                                                                      
 110   sh121       sh122             sh123 sh124       sh125 sh103 sh104 sh105 sh106       sh126 sh127             sh109                                                                                     go128 go129      
 111   re97  re97  re97              re97  re97        re97  re97  re97  re97  re97  re97  re97  re97              re97  re97                                                                                                 
 112   re98  re98  re98              re98  re98        re98  re98  re98  re98  re98  re98  re98  re98              re98  re98                                                                                                 
 113         sh52                                                                                                                                                                                                             
 114   sh130       sh122             sh123 sh124       sh125 sh103 sh104 sh105 sh106       sh126 sh127             sh109                                                                                     go128 go129      
 115   re99  re99  re99              re99  re99        re99  re99  re99  re99  re99  re99  re99  re99              re99  re99                                                                                                 
 116   re100 re100 sh122             sh123 sh124       sh125 sh103 sh104 sh105 sh106 re100 sh126 sh127             sh109 re100                                                                               go128 go129      
 117   re101 re101 sh122             sh123 sh124       sh125 sh103 sh104 sh105 sh106 re101 sh126 sh127             sh109 re101                                                                               go128 go129      
 118               sh122             sh123 sh124       sh125 sh103 sh104 sh105 sh106 sh131 sh126 sh127             sh109                                                                                     go128 go129      
 119               sh122             sh123 sh124       sh125 sh103 sh104 sh105 sh106 sh132 sh126 sh127             sh109                                                                                     go128 go129      
 120                                 sh133                                                                                                                                                                                    
 121                                                   sh134                                                 sh135                                                       go136                                                
 122   re88  re88  re88              re88  re88        re88  re88  re88  re88  re88  re88  re88  re88              re88  re88                                                                                                 
 123   re87  re87  re87              re87  re87        re87  re87  re87  re87  re87  re87  re87  re87              re87  re87                                                                                                 
 124                                 sh137                                                                                                                                                                                    
 125   re84  re84  re84              re84  re84        re84  re84  re84  re84  re84  re84  re84  re84              re84  re84                                                                                                 
 126   re85  re85  re85              re85  re85        re85  re85  re85  re85  re85  re85  re85  re85              re85  re85                                                                                                 
 127   re86  re86  re86              re86  re86        re86  re86  re86  re86  re86  re86  re86  re86              re86  re86                                                                                                 
 128   re89  re89  re89              re89  re89        re89  re89  re89  re89  re89  re89  re89  re89              re89  re89                                                                                                 
 129   re90  re90  re90              re90  re90        re90  re90  re90  re90  re90  re90  re90  re90              re90  re90                                                                                                 
 130                                                   sh134                                                 sh138                                                       go139                                                
 131   re102 re102 re102             re102 re102       re102 re102 re102 re102 re102 re102 re102 re102             re102 re102                                                                                                
 132   re103 re103 re103             re103 re103       re103 re103 re103 re103 re103 re103 re103 re103             re103 re103                                                                                                
 133         sh140                                                                                                                                                                                                            
 134                                                   re40                                                  re40                                                                                                             
 135   re15  re15  re15  re15        re15  re15        re15                                re15  re15  re15  re15  re15  re15                                                                                            re15 
 136                                                   sh141                                                 sh142                                                                                                            
 137   re91  re91  re91              re91  re91        re91  re91  re91  re91  re91  re91  re91  re91              re91  re91                                                                                                 
 138   re19  re19  re19  re19        re19  re19        re19                                re19  re19  re19  re19  re19  re19                                                                                            re19 
 139                                                   sh141                                                 sh143                                                                                                            
 140               sh99              sh100 sh101       sh102 sh103 sh104 sh105 sh106       sh107 sh108             sh109                                                                               go144 go111 go112      
 141                                                   re39                                                  re39                                                                                                             
 142   re14  re14  re14  re14        re14  re14        re14                                re14  re14  re14  re14  re14  re14                                                                                            re14 
 143   re18  re18  re18  re18        re18  re18        re18                                re18  re18  re18  re18  re18  re18                                                                                            re18 
 144         sh145 sh122             sh123 sh124       sh125 sh103 sh104 sh105 sh106       sh126 sh127             sh109 sh146                                                                               go128 go129      
 145               sh99              sh100 sh101       sh102 sh103 sh104 sh105 sh106       sh107 sh108             sh109                                                                               go147 go111 go112      
 146   re104 re104 re104             re104 re104       re104 re104 re104 re104 re104 re104 re104 re104             re104 re104                                                                                                
 147               sh122             sh123 sh124       sh125 sh103 sh104 sh105 sh106       sh126 sh127             sh109 sh148                                                                               go128 go129      
 148   re105 re105 re105             re105 re105       re105 re105 re105 re105 re105 re105 re105 re105             re105 re105                                                                                                
