filepatterns
{*.c *.cc *.cpp *.c++ *.h}

tabsallowed
{0}

indent
{\{}
  
unindent
{\}}

keywords
{
  return break case continue default do else for goto if switch while
  struct union enum enumdef structdef typedef uniondef sizeof
  void char double float int long short signed unsigned
  auto extern register static const volatile
  
  class public private protected new delete

  free malloc abort abs acos asctime asin assert atan atan2 atexit atof atoi atol bsearch
  calloc ceil clearerr clock cos cosh ctime difftime div ecvt exit exp fabs fclose fcvt feof
  ferror fflush fgetc fgetpos fgets floor fmod fopen fprintf fputc fputchar fputs fread free
  freopen frexp fscanf fseek fsetpos ftell fwrite gcvt getc getchar getenv gets getw gmtime
  isalum isalpha iscntrl isdigit isgraph islower isprint ispunct isspace isupper isxdigit itoa
  labs ldexp ldiv lfind localtime log log10 lsearch ltoa malloc max memchr memcmp memcpy memmove
  memset min mktime modf offsetof perror pow printf putc putchar putenv puts putw qsort raise rand
  realloc remove rename rewind scanf setbuf setvbuf signal sin sinh sprintf sqrt srand sscanf
  strcat strchr strcmp strcoll strcpy strcspn strerror strftime strlen strncat strncmp strncpy
  strpbrk strrchr strspn strstr strtod strtok strtol strtoul strxfrm swab system tan tanh time
  tmpfile tmpnam tolower toupper ultoa ungetc va_arg va_end va_start vfprintf vprintf vsprintf
}

symbols {}

ccomments 1

strings
{
  HighlightClassForRegexp {\"[^\"]*\"}
}

numbers
{
  HighlightClassForRegexp {\m[0-9]+}
}

punctuation
{
  HighlightClassForRegexp {[][\{\};:,()#=.@&!?<>%|^~+*/-]}
}

precompile
{
  HighlightClassWithOnlyCharStart {#}
}

miscellaneous {}
 
