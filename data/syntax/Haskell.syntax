filepatterns
{*.haskell}

matchcharsallowed
{curly square paren double single}

tabsallowed
{0}

casesensitive
{1}

indent
{\{}
  
unindent
{\}}

lcomments {{--}}

bcomments {{\{- -\}}}

strings {{"} {'}}

keywords
{
  case class data default deriving do else foreign if import in infix infixl infixr
  instance let module newtype of then type where __
}

symbols
{
}

numbers {
  HighlightClassForRegexp {[0-9]+|0[oO][0-7]+|0[xX][0-9a-fA-F]+|[eE][+-]?[0-9]+} {}
}

punctuation
{
  HighlightClassForRegexp {(..|:\::\=|\||<-|->|@|~|=>)} {}
}

precompile {}

miscellaneous {}

