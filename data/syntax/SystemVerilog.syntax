filepatterns
{*.sv *.svh}

vimsyntax
{verilog}

reference
{
  {{Language Reference} http://www.ece.uah.edu/~gaede/cpe526/SystemVerilog_3.1a.pdf}
}

embedded {
  {Verilog}
}

matchcharsallowed
{curly square paren double}

tabsallowed
{0}

casesensitive
{1}

indent {
  begin task function casex casez module generate class clocking group
  interface package program property sequence
}

unindent {
  end endtask endfunction endcase endmodule endgenerate endclass endclocking endgroup
  endinterface endpackage endprogram endproperty endsequence
}

icomment {{//}}

lcomments {{//}}

bcomments {{{/\*} {\*/}}}

strings {{"}}

keywords
{
  alias always_comb always_ff always_latch assert assume bind bins binsof bit before break byte
  chandle char class clocking const constraint context continue cover covergroup coverpoint
  cross dist do endclass endclocking endgroup endinterface endpackage endprogram endproperty
  endsequence enum expect export extends extern final first_match foreach forkjoin iff ifnone
  ignore_bins illegal_bins import include inside instance int interface intersect join_any
  join_none local logic longint matches modport new null option. package packed priority
  program property protected pure rand randc randcase randomize randsequence ref return scalared
  sequence shortint shortreal solve static string struct super tagged this throughout timeprecision
  timeunit type typedef type_option union unique unsigned virtual void wait_order wildcard with
  within
}

numbers
{
  HighlightRegexp {\m[0-9]+|\m[0-9]*'[sS]?[hHdDoObB]\s*[0-9a-fA-F_]+} {}
}

punctuation
{
  HighlightRegexp {[][\{\};:,()#=.@&!?<>%|^~+*/-]} {}
}

precompile
{
  HighlightRegexp {#line|`\w+} {}
}

