filepatterns
{*.d}

vimsyntax
{d}

matchcharsallowed
{curly square paren double single}

tabsallowed
{0}

casesensitive
{1}

indent
{\{}

unindent
{\}}

reindent
{{switch case default}}

icomment {{//}}

lcomments {{//}}

bcomments {{{/\*} {\*/}} {{/\+} {\+/}}}

strings {{"} {`}}

keywords
{
  abstract alias align asm assert auto body bool break byte case cast catch cdouble
  cent cfloat char class const continue creal dchar debug default delegate delete
  deprecated do double else enum export extern false final finally float for
  foreach foreach_reverse function goto idouble if ifloat immutable import in inout
  int interface invariant ireal is lazy long mixin module new nothrow null out
  override package pragma private protected public pure real ref return scope shared
  short static struct super switch synchronized template this throw true try
  typedef typeid typeof ubyte ucent uint ulong union unittest ushort version void
  volatile wchar while with
}

numbers
{
  HighlightRegexp {\m([0-9_]+[lLuU]*|0[bB][0-1_]+|0[xX][0-9a-fA-F_]+[lLuU]*|[0-9_]*\.[0-9_]*([eE][+-]?[0-9_]+[fFLi]*))} {}
}

punctuation
{
  HighlightRegexp {[][\{\};:,()#=.@&!?<>%|^~+*/-]} {}
}

precompile
{
  HighlightWithOnlyCharStart {#} {}
}

miscellaneous1 {
  HighlightKeywords {
    __FILE__ __MODULE__ __LINE__ __FUNCTION__ __PRETTY_FUNCTION__ __DATE__
    __EOF__ __TIME__ __TIMESTAMP__ __VENDOR__ __VERSION__
  }
}
