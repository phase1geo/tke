filepatterns
{*.v *.vg}

vimsyntax
{verilog}

matchcharsallowed
{curly square paren double}

tabsallowed
{0}

casesensitive
{1}

indent
{begin task function casex casez module generate}

unindent
{end endtask endfunction endcase endmodule endgenerate}

icomment {{//}}

lcomments {{//}}

bcomments {{{/\*} {\*/}}}

strings {{"}}

keywords
{
  always and assign begin buf bufif0 bufif1 case casex casez cmos deassign default defparam
  disable edge else end endcase endfunction endmodule endprimitive endspecify endtable endtask
  event for force forever fork function highz0 highz1 if initial inout input integer join
  large macromodule medium module nand negedge nmos nor not notif0 notif1 or output parameter
  pmos posedge primitive pull0 pull1 pulldown pullup rcmos real realtime reg release repeat
  rnmos rpmos rtran rtranif0 rtranif1 scalered signed small specify specparam strong0 strong1
  supply0 supply1 table task time tran tranif0 tranif1 tri tri0 tri1 triand trior trireg
  vectored wait wand weak0 weak1 while wire wor xnor xor

  automatic cell config design endconfig endgenerate generate genvar instance liblist library
  localparam noshowcancelled pulsestyle_onevent pulsestyle_ondetect showcancelled use
}

numbers
{
  HighlightRegexp {\m([0-9]+|[0-9]*'[sS]?[hHdDoObB]\s*[0-9a-fA-F_]+)} {}
}

punctuation
{
  HighlightRegexp {[][\{\};:,()#=.@&!?<>%|^~+*/-]} {}
}

precompile
{
  HighlightRegexp {#line|`\w+} {}
}

miscellaneous1
{
  HighlightWithOnlyCharStart \$ {}
}

miscellaneous2
{
  HighlightRegexp {#line|`\w+} {}
}
