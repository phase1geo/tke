swatch {{#fdf9d0} #d5d2af #00003c}
date {1543457866}
images,form_close {dat {#define img_width 8
#define img_height 8
static char img_bits[] = {
0x44, 0xee, 0x7c, 0x38, 0x7c, 0xee, 0x44, 0x00};} msk {#define img_width 8
#define img_height 8
static char img_bits[] = {
0x44, 0xee, 0x7c, 0x38, 0x7c, 0xee, 0x44, 0x00};} fg #00003c}
images,menu_diff {dat {#define img_width 8
#define img_height 8
static char img_bits[] = {
0x1f, 0x1f, 0x11, 0xff, 0xdf, 0x88, 0xd8, 0xf8};} msk {#define img_width 8
#define img_height 8
static char img_bits[] = {
0x1f, 0x1f, 0x11, 0xff, 0xdf, 0x88, 0xd8, 0xf8};} fg #00003c}
images,menu_lock {dat {#define img_width 8
#define img_height 8
static char img_bits[] = {
0x3e, 0x7f, 0x63, 0x7f, 0x7f, 0x77, 0x77, 0x7f};} msk {#define img_width 8
#define img_height 8
static char img_bits[] = {
0x3e, 0x7f, 0x63, 0x7f, 0x7f, 0x77, 0x77, 0x7f};} fg #00003c}
images,menu_readonly {dat {#define img_width 8
#define img_height 8
static char img_bits[] = {
0x3e, 0x7f, 0x63, 0x7f, 0x7f, 0x77, 0x77, 0x7f};} msk {#define img_width 8
#define img_height 8
static char img_bits[] = {
0x3e, 0x7f, 0x63, 0x7f, 0x7f, 0x77, 0x77, 0x7f};} fg #00003c}
images,pref_advanced {file advanced.gif dir install}
images,pref_appearance {file appearance.gif dir install}
images,pref_check {file check.gif dir install}
images,pref_checked {file checked.gif dir install}
images,pref_documentation {file documentation.gif dir install}
images,pref_editor {file editor.gif dir install}
images,pref_emmet {file emmet.gif dir install}
images,pref_find {file find.gif dir install}
images,pref_general {file general.gif dir install}
images,pref_plugins {file plugins.gif dir install}
images,pref_shortcuts {file shortcut.gif dir install}
images,pref_sidebar {file sidebar.gif dir install}
images,pref_snippets {file snippets.gif dir install}
images,pref_unchecked {file unchecked.gif dir install}
images,pref_view {file view.gif dir install}
images,remote_back {dat {#define img_width 18
#define img_height 10
static char img_bits[] = {
0x00, 0x0c, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x0f, 0x00, 0x80, 0x0f, 0x00, 0xc0, 0x0f, 0x00, 0xc0, 0x0f, 0x00, 0x80, 0x0f, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x0c, 0x00};} msk {#define img_width 18
#define img_height 10
static char img_bits[] = {
0x00, 0x0c, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x0f, 0x00, 0x80, 0x0f, 0x00, 0xc0, 0x0f, 0x00, 0xc0, 0x0f, 0x00, 0x80, 0x0f, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x0c, 0x00};} fg #00003c}
images,remote_back_disabled {dat {#define img_width 18
#define img_height 10
static char img_bits[] = {
0x00, 0x0c, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x0f, 0x00, 0x80, 0x0f, 0x00, 0xc0, 0x0f, 0x00, 0xc0, 0x0f, 0x00, 0x80, 0x0f, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x0c, 0x00};} msk {#define img_width 18
#define img_height 10
static char img_bits[] = {
0x00, 0x0c, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x0f, 0x00, 0x80, 0x0f, 0x00, 0xc0, 0x0f, 0x00, 0xc0, 0x0f, 0x00, 0x80, 0x0f, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x0c, 0x00};} fg #fdf9d0}
images,remote_connected {dat {#define img_width 16
#define img_height 16
static char img_bits[] = {
0x00, 0x00, 0x00, 0x20, 0x00, 0x70, 0x00, 0x3f, 0x80, 0x1f, 0xc0, 0x1f, 0xe0, 0x1f, 0x70, 0x1f, 0xf8, 0x0e, 0xf8, 0x07, 0xf8, 0x03, 0xf8, 0x01, 0xfc, 0x00, 0x0e, 0x00, 0x04, 0x00, 0x00, 0x00};} msk {#define img_width 16
#define img_height 16
static char img_bits[] = {
0x00, 0x00, 0x00, 0x20, 0x00, 0x70, 0x00, 0x3f, 0x80, 0x1f, 0xc0, 0x1f, 0xe0, 0x1f, 0x70, 0x1f, 0xf8, 0x0e, 0xf8, 0x07, 0xf8, 0x03, 0xf8, 0x01, 0xfc, 0x00, 0x0e, 0x00, 0x04, 0x00, 0x00, 0x00};} fg #00003c}
images,remote_connecting {dat {#define img_width 16
#define img_height 16
static char img_bits[] = {
0x00, 0x40, 0x00, 0xec, 0x00, 0x7e, 0x00, 0x3f, 0x80, 0x7f, 0x00, 0x7f, 0x40, 0x3e, 0x70, 0x1c, 0x38, 0x08, 0x7c, 0x03, 0xfe, 0x01, 0xfe, 0x01, 0xfc, 0x00, 0x7e, 0x00, 0x37, 0x00, 0x02, 0x00};} msk {#define img_width 16
#define img_height 16
static char img_bits[] = {
0x00, 0x40, 0x00, 0xec, 0x00, 0x7e, 0x00, 0x3f, 0x80, 0x7f, 0x00, 0x7f, 0x40, 0x3e, 0x70, 0x1c, 0x38, 0x08, 0x7c, 0x03, 0xfe, 0x01, 0xfe, 0x01, 0xfc, 0x00, 0x7e, 0x00, 0x37, 0x00, 0x02, 0x00};} fg #00003c}
images,remote_directory {dat {#define img_width 18
#define img_height 10
static char img_bits[] = {
0xc0, 0x00, 0x00, 0xc0, 0x01, 0x00, 0xc0, 0x03, 0x00, 0xc0, 0x07, 0x00, 0xc0, 0x0f, 0x00, 0xc0, 0x0f, 0x00, 0xc0, 0x07, 0x00, 0xc0, 0x03, 0x00, 0xc0, 0x01, 0x00, 0xc0, 0x00, 0x00};} msk {#define img_width 18
#define img_height 10
static char img_bits[] = {
0xc0, 0x00, 0x00, 0xc0, 0x01, 0x00, 0xc0, 0x03, 0x00, 0xc0, 0x07, 0x00, 0xc0, 0x0f, 0x00, 0xc0, 0x0f, 0x00, 0xc0, 0x07, 0x00, 0xc0, 0x03, 0x00, 0xc0, 0x01, 0x00, 0xc0, 0x00, 0x00};} fg #00003c}
images,remote_file {dat {#define blank_width 8
#define blank_height 8
static unsigned char blank_bits[] = {
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
} fg 2 msk {#define blank_width 8
#define blank_height 8
static unsigned char blank_bits[] = {
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
}}
images,remote_next {dat {#define img_width 18
#define img_height 10
static char img_bits[] = {
0xc0, 0x00, 0x00, 0xc0, 0x01, 0x00, 0xc0, 0x03, 0x00, 0xc0, 0x07, 0x00, 0xc0, 0x0f, 0x00, 0xc0, 0x0f, 0x00, 0xc0, 0x07, 0x00, 0xc0, 0x03, 0x00, 0xc0, 0x01, 0x00, 0xc0, 0x00, 0x00};} msk {#define img_width 18
#define img_height 10
static char img_bits[] = {
0xc0, 0x00, 0x00, 0xc0, 0x01, 0x00, 0xc0, 0x03, 0x00, 0xc0, 0x07, 0x00, 0xc0, 0x0f, 0x00, 0xc0, 0x0f, 0x00, 0xc0, 0x07, 0x00, 0xc0, 0x03, 0x00, 0xc0, 0x01, 0x00, 0xc0, 0x00, 0x00};} fg #00003c}
images,remote_next_disabled {dat {#define img_width 18
#define img_height 10
static char img_bits[] = {
0xc0, 0x00, 0x00, 0xc0, 0x01, 0x00, 0xc0, 0x03, 0x00, 0xc0, 0x07, 0x00, 0xc0, 0x0f, 0x00, 0xc0, 0x0f, 0x00, 0xc0, 0x07, 0x00, 0xc0, 0x03, 0x00, 0xc0, 0x01, 0x00, 0xc0, 0x00, 0x00};} msk {#define img_width 18
#define img_height 10
static char img_bits[] = {
0xc0, 0x00, 0x00, 0xc0, 0x01, 0x00, 0xc0, 0x03, 0x00, 0xc0, 0x07, 0x00, 0xc0, 0x0f, 0x00, 0xc0, 0x0f, 0x00, 0xc0, 0x07, 0x00, 0xc0, 0x03, 0x00, 0xc0, 0x01, 0x00, 0xc0, 0x00, 0x00};} fg #fdf9d0}
images,search_next {dat {#define right_width 18
#define right_height 10
static unsigned char right_bits[] = {
   0xc0, 0x00, 0x00, 0xc0, 0x01, 0x00, 0xc0, 0x03, 0x00, 0xc0, 0x07, 0x00,
   0xc0, 0x0f, 0x00, 0xc0, 0x0f, 0x00, 0xc0, 0x07, 0x00, 0xc0, 0x03, 0x00,
   0xc0, 0x01, 0x00, 0xc0, 0x00, 0x00};
} fg 2 msk {#define right_width 18
#define right_height 10
static unsigned char right_bits[] = {
   0xc0, 0x00, 0x00, 0xc0, 0x01, 0x00, 0xc0, 0x03, 0x00, 0xc0, 0x07, 0x00,
   0xc0, 0x0f, 0x00, 0xc0, 0x0f, 0x00, 0xc0, 0x07, 0x00, 0xc0, 0x03, 0x00,
   0xc0, 0x01, 0x00, 0xc0, 0x00, 0x00};
}}
images,search_prev {dat {#define left_width 18
#define left_height 10
static unsigned char left_bits[] = {
   0x00, 0x0c, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x0f, 0x00, 0x80, 0x0f, 0x00,
   0xc0, 0x0f, 0x00, 0xc0, 0x0f, 0x00, 0x80, 0x0f, 0x00, 0x00, 0x0f, 0x00,
   0x00, 0x0e, 0x00, 0x00, 0x0c, 0x00};
} fg 2 msk {#define left_width 18
#define left_height 10
static unsigned char left_bits[] = {
   0x00, 0x0c, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x0f, 0x00, 0x80, 0x0f, 0x00,
   0xc0, 0x0f, 0x00, 0xc0, 0x0f, 0x00, 0x80, 0x0f, 0x00, 0x00, 0x0f, 0x00,
   0x00, 0x0e, 0x00, 0x00, 0x0c, 0x00};
}}
images,sidebar_collapsed {dat {#define img_width 10
#define img_height 10
static char img_bits[] = {
0x0c, 0x00, 0x1c, 0x00, 0x3c, 0x00, 0x7c, 0x00, 0xfc, 0x00, 0xfc, 0x00, 0x7c, 0x00, 0x3c, 0x00, 0x1c, 0x00, 0x0c, 0x00};} msk {#define img_width 10
#define img_height 10
static char img_bits[] = {
0x0c, 0x00, 0x1c, 0x00, 0x3c, 0x00, 0x7c, 0x00, 0xfc, 0x00, 0xfc, 0x00, 0x7c, 0x00, 0x3c, 0x00, 0x1c, 0x00, 0x0c, 0x00};} fg #fdf9d0}
images,sidebar_collapsed_sel {dat {#define img_width 10
#define img_height 10
static char img_bits[] = {
0x0c, 0x00, 0x1c, 0x00, 0x3c, 0x00, 0x7c, 0x00, 0xfc, 0x00, 0xfc, 0x00, 0x7c, 0x00, 0x3c, 0x00, 0x1c, 0x00, 0x0c, 0x00};} msk {#define img_width 10
#define img_height 10
static char img_bits[] = {
0x0c, 0x00, 0x1c, 0x00, 0x3c, 0x00, 0x7c, 0x00, 0xfc, 0x00, 0xfc, 0x00, 0x7c, 0x00, 0x3c, 0x00, 0x1c, 0x00, 0x0c, 0x00};} fg #00003c}
images,sidebar_expanded {dat {#define img_width 10
#define img_height 10
static char img_bits[] = {
0x00, 0x00, 0x00, 0x00, 0xff, 0x03, 0xff, 0x03, 0xfe, 0x01, 0xfc, 0x00, 0x78, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00};} msk {#define img_width 10
#define img_height 10
static char img_bits[] = {
0x00, 0x00, 0x00, 0x00, 0xff, 0x03, 0xff, 0x03, 0xfe, 0x01, 0xfc, 0x00, 0x78, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00};} fg #fdf9d0}
images,sidebar_expanded_sel {dat {#define img_width 10
#define img_height 10
static char img_bits[] = {
0x00, 0x00, 0x00, 0x00, 0xff, 0x03, 0xff, 0x03, 0xfe, 0x01, 0xfc, 0x00, 0x78, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00};} msk {#define img_width 10
#define img_height 10
static char img_bits[] = {
0x00, 0x00, 0x00, 0x00, 0xff, 0x03, 0xff, 0x03, 0xfe, 0x01, 0xfc, 0x00, 0x78, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00};} fg #00003c}
images,sidebar_file {dat {#define blank10_width 10
#define blank10_height 10
static unsigned char blank10_bits[] = {
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
} fg white msk {#define blank10_width 10
#define blank10_height 10
static unsigned char blank10_bits[] = {
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
}}
images,sidebar_hidden {bg #d5d2af fg #fdf9d0 dat {#define img_width 5
#define img_height 15
static char img_bits[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};} msk {#define img_width 5
#define img_height 15
static char img_bits[] = {
0x1f, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x1f};}}
images,sidebar_info_close {dat {#define close_width 8
#define close_height 8
static unsigned char close_bits[] = {
   0x44, 0xee, 0x7c, 0x38, 0x7c, 0xee, 0x44, 0x00};
} fg 1 msk {#define close_width 8
#define close_height 8
static unsigned char close_bits[] = {
   0x44, 0xee, 0x7c, 0x38, 0x7c, 0xee, 0x44, 0x00};
}}
images,sidebar_info_refresh {dat {#define refresh_width 8
#define refresh_height 8
static unsigned char refresh_bits[] = {
   0x3c, 0x7c, 0xe0, 0xe2, 0x47, 0x07, 0x3e, 0x3c};
} fg 1 msk {#define refresh_width 8
#define refresh_height 8
static unsigned char refresh_bits[] = {
   0x3c, 0x7c, 0xe0, 0xe2, 0x47, 0x07, 0x3e, 0x3c};
}}
images,sidebar_info_show {dat {#define bullet_width 8
#define bullet_height 8
static char bullet_bits = {
  0x00, 0x3c, 0x66, 0xdb, 0xdb, 0x66, 0x3c, 0x00
}
} fg 1 msk {#define bullet_width 8
#define bullet_height 8
static char bullet_bits = {
  0x00, 0x3c, 0x66, 0xdb, 0xdb, 0x66, 0x3c, 0x00
}
}}
images,sidebar_open {bg #d5d2af fg gold dat {#define img_width 5
#define img_height 15
static char img_bits[] = {
0x00, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x00};} msk {#define img_width 5
#define img_height 15
static char img_bits[] = {
0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f};}}
images,tab_activeclose {dat {#define active_close_width 9
#define active_close_height 9
static unsigned char active_close_bits[] = {
   0x00, 0x00, 0xc6, 0x00, 0xee, 0x00, 0x7c, 0x00, 0x38, 0x00, 0x7c, 0x00, 0xee, 0x00, 0xc6, 0x00, 0x00, 0x00 };
} fg 2 msk {#define active_close_width 9
#define active_close_height 9
static unsigned char active_close_bits[] = {
   0x00, 0x00, 0xc6, 0x00, 0xee, 0x00, 0x7c, 0x00, 0x38, 0x00, 0x7c, 0x00, 0xee, 0x00, 0xc6, 0x00, 0x00, 0x00 };
}}
images,tab_close {fg #00003c dat {#define img_width 9
#define img_height 9
static char img_bits[] = {
0x00, 0x00, 0x44, 0x00, 0xee, 0x00, 0x7c, 0x00, 0x38, 0x00, 0x7c, 0x00, 0xee, 0x00, 0x44, 0x00, 0x00, 0x00};} msk {#define img_width 9
#define img_height 9
static char img_bits[] = {
0xff, 0x01, 0x44, 0x00, 0xee, 0x00, 0x7c, 0x00, 0x38, 0x00, 0x7c, 0x00, 0xee, 0x00, 0x44, 0x00, 0x00, 0x00};}}
images,tab_diff {dat {#define img_width 8
#define img_height 8
static char img_bits[] = {
0x1f, 0x1f, 0x11, 0xff, 0xdf, 0x88, 0xd8, 0xf8};} msk {#define img_width 8
#define img_height 8
static char img_bits[] = {
0x1f, 0x1f, 0x11, 0xff, 0xdf, 0x88, 0xd8, 0xf8};} fg #00003c}
images,tab_lock {dat {#define img_width 8
#define img_height 8
static char img_bits[] = {
0x3e, 0x7f, 0x63, 0x7f, 0x7f, 0x77, 0x77, 0x7f};} msk {#define img_width 8
#define img_height 8
static char img_bits[] = {
0x3e, 0x7f, 0x63, 0x7f, 0x7f, 0x77, 0x77, 0x7f};} fg #00003c}
images,tab_readonly {dat {#define img_width 8
#define img_height 8
static char img_bits[] = {
0x3e, 0x7f, 0x63, 0x7f, 0x7f, 0x77, 0x77, 0x7f};} msk {#define img_width 8
#define img_height 8
static char img_bits[] = {
0x3e, 0x7f, 0x63, 0x7f, 0x7f, 0x77, 0x77, 0x7f};} fg #00003c}
launcher,-background {white}
launcher,-bordercolor {grey90}
launcher,-borderwidth {5}
launcher,-foreground {black}
launcher,-listbackground {white}
launcher,-listforeground {black}
launcher,-scrollcolor {grey90}
launcher,-scrollwidth {10}
launcher,-selectbackground {light blue}
launcher,-selectforeground {black}
launcher,-spacercolor {white}
launcher,-spacerheight {5}
launcher,-textbackground {#fdf9d0}
launcher,-textforeground {#00003c}
menus,-activebackground {light blue}
menus,-activeforeground {black}
menus,-background {white}
menus,-disabledforeground {grey}
menus,-foreground {black}
menus,-relief {flat}
menus,-selectcolor {black}
meta,syntax,cursor {#d5d2af,v,80}
meta,syntax,embedded {#fdf9d0,v,15}
meta,syntax,readmeta {grey80,v,50}
misc_scrollbar,-background {#d5d2af}
misc_scrollbar,-foreground {#00003c}
misc_scrollbar,-thickness {15}
sidebar,-background {#00003c}
sidebar,-dropcolor {green}
sidebar,-foreground {#fdf9d0}
sidebar,-highlightbackground {#00003c}
sidebar,-highlightcolor {#00003c}
sidebar,-highlightthickness {1}
sidebar,-movebackground {#fdf9d0}
sidebar,-moveforeground {#00003c}
sidebar,-relief {flat}
sidebar,-selectbackground {#d5d2af}
sidebar,-selectforeground {#00003c}
sidebar_info,-active_background {#fdf9d0}
sidebar_info,-background {#00003c}
sidebar_info,-title_foreground {#d5d2af}
sidebar_info,-value_foreground {#d5d2af}
sidebar_scrollbar,-background {#00003c}
sidebar_scrollbar,-foreground {#d5d2af}
sidebar_scrollbar,-thickness {15}
syntax,attention {red}
syntax,background {#fdf9d0}
syntax,border_highlight {gold}
syntax,closed_fold {orange}
syntax,comments {#f67b37}
syntax,cursor {#85836e}
syntax,difference_add {#f1ffc4}
syntax,difference_sub {#ffebc2}
syntax,embedded {#eeebc4}
syntax,foreground {#0000ff}
syntax,functions {#3a50e9}
syntax,highlighter {yellow}
syntax,keywords {#008000}
syntax,line_number {#d5d2af}
syntax,linemap {black}
syntax,linemap_separator {grey}
syntax,marker {orange}
syntax,meta {#d5d2af}
syntax,miscellaneous1 {#0000ff}
syntax,miscellaneous2 {#3a51e9}
syntax,miscellaneous3 {#000000}
syntax,numbers {#cc66ff}
syntax,precompile {#787878}
syntax,punctuation {#9b5c2e}
syntax,readmeta {#9a9a9a}
syntax,search_background {yellow}
syntax,search_foreground {black}
syntax,select_background {blue}
syntax,select_foreground {white}
syntax,strings {#f04f97}
syntax,variables {#000000}
syntax,warning_width {#d5d2af}
tabs,-activebackground {#fdf9d0}
tabs,-activeforeground {#00003c}
tabs,-background {#d5d2af}
tabs,-bordercolor {#fdf9d0}
tabs,-foreground {#00003c}
tabs,-height {25}
tabs,-inactivebackground {#d5d2af}
tabs,-inactiveforeground {#00003c}
tabs,-relief {flat}
text_scrollbar,-altforeground {red}
text_scrollbar,-background {#fdf9d0}
text_scrollbar,-foreground {#d5d2af}
text_scrollbar,-thickness {15}
ttk_style,active_color {#fdf9d0}
ttk_style,background {#d5d2af}
ttk_style,border_color {#9e9a91}
ttk_style,dark_color {#cfcdc8}
ttk_style,disabled_background {#d5d2af}
ttk_style,disabled_foreground {#999999}
ttk_style,entry_border {#4a6984}
ttk_style,foreground {#00003c}
ttk_style,grip_count {10}
ttk_style,grip_thickness {5}
ttk_style,pressed_color {#bab5ab}
ttk_style,relief {flat}
ttk_style,select_background {#4a6984}
ttk_style,select_foreground {#ffffff}
