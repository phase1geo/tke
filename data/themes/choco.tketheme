swatch {#180c0c #402020 #c3be98}
images,form_close {dat {#define close_width 8
#define close_height 8
static unsigned char close_bits[] = {
   0x44, 0xee, 0x7c, 0x38, 0x7c, 0xee, 0x44, 0x00};
} fg white msk {#define close_width 8
#define close_height 8
static unsigned char close_bits[] = {
   0x44, 0xee, 0x7c, 0x38, 0x7c, 0xee, 0x44, 0x00};
}}
images,menu_diff {dat {#define img_width 8
#define img_height 8
static char img_bits[] = {
0x1f, 0x1f, 0x11, 0xff, 0xdf, 0x88, 0xd8, 0xf8};} msk {#define img_width 8
#define img_height 8
static char img_bits[] = {
0x1f, 0x1f, 0x11, 0xff, 0xdf, 0x88, 0xd8, 0xf8};} fg #180c0c}
images,menu_lock {dat {#define img_width 8
#define img_height 8
static char img_bits[] = {
0x3e, 0x7f, 0x63, 0x7f, 0x7f, 0x77, 0x77, 0x7f};} msk {#define img_width 8
#define img_height 8
static char img_bits[] = {
0x3e, 0x7f, 0x63, 0x7f, 0x7f, 0x77, 0x77, 0x7f};} fg #180c0c}
images,menu_readonly {dat {#define img_width 8
#define img_height 8
static char img_bits[] = {
0x3e, 0x7f, 0x63, 0x7f, 0x7f, 0x77, 0x77, 0x7f};} msk {#define img_width 8
#define img_height 8
static char img_bits[] = {
0x3e, 0x7f, 0x63, 0x7f, 0x7f, 0x77, 0x77, 0x7f};} fg #180c0c}
images,sidebar_open {dat {#define bullet_width 5
#define bullet_height 15
static char bullet_bits = {
    0x00, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x00
}
} bg black fg gold msk {#define bullet_width 5
#define bullet_height 15
static char bullet_bits = {
    0x00, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x00
}
}}
images,tab_diff {dat {#define bullet_width 8
#define bullet_height 8
static char bullet_bits = {
    0x1f, 0x1f, 0x11, 0xff, 0xdf, 0x88, 0xd8, 0xf8
}
} fg white msk {#define bullet_width 8
#define bullet_height 8
static char bullet_bits = {
    0x1f, 0x1f, 0x11, 0xff, 0xdf, 0x88, 0xd8, 0xf8
}
}}
images,tab_lock {dat {#define lock_width 8
#define lock_height 8
static unsigned char lock_bits[] = {
   0x3e, 0x7f, 0x63, 0x7f, 0x7f, 0x77, 0x77, 0x7f};
} fg white msk {#define lock_width 8
#define lock_height 8
static unsigned char lock_bits[] = {
   0x3e, 0x7f, 0x63, 0x7f, 0x7f, 0x77, 0x77, 0x7f};
}}
images,tab_readonly {dat {#define lock_width 8
#define lock_height 8
static unsigned char lock_bits[] = {
   0x3e, 0x7f, 0x63, 0x7f, 0x7f, 0x77, 0x77, 0x7f};
} fg white msk {#define lock_width 8
#define lock_height 8
static unsigned char lock_bits[] = {
   0x3e, 0x7f, 0x63, 0x7f, 0x7f, 0x77, 0x77, 0x7f};
}}
menus,-background {white}
menus,-foreground {black}
menus,-relief {flat}
sidebar,-background {#c3be98}
sidebar,-foreground {#180c0c}
sidebar,-highlightbackground {#c3be98}
sidebar,-highlightcolor {#c3be98}
sidebar,-selectbackground {#402020}
sidebar,-selectforeground {#c3be98}
sidebar,-treestyle {aqua}
sidebar_scrollbar,-background {#c3be98}
sidebar_scrollbar,-foreground {#402020}
sidebar_scrollbar,-thickness {15}
syntax,background {#180c0c}
syntax,border_highlight {gold}
syntax,comments {#679d47}
syntax,cursor {#6c6c6c}
syntax,difference_add {#182a0c}
syntax,difference_sub {#360c0c}
syntax,foreground {#c3be98}
syntax,highlighter {yellow}
syntax,keywords {#c8a573}
syntax,line_number {#653032}
syntax,meta {#402020}
syntax,miscellaneous1 {#9f785b}
syntax,miscellaneous2 {#5e828d}
syntax,miscellaneous3 {#f1e694}
syntax,numbers {#c9584f}
syntax,precompile {#afc4db}
syntax,punctuation {#b48f62}
syntax,select_background {blue}
syntax,select_foreground {white}
syntax,strings {#8f9d6a}
syntax,warning_width {#402020}
tabs,-activebackground {#180c0c}
tabs,-background {#402020}
tabs,-foreground {#c3be98}
tabs,-inactivebackground {#402020}
tabs,-relief {flat}
text_scrollbar,-background {#180c0c}
text_scrollbar,-foreground {#402020}
text_scrollbar,-thickness {15}
ttk_style,dark {#cfcdc8}
ttk_style,darker {#bab5ab}
ttk_style,darkest {#9e9a91}
ttk_style,disabledfg {#999999}
ttk_style,frame {#402020}
ttk_style,lighter {#c3be98}
ttk_style,lightest {#c3be98}
ttk_style,lightframe {#402020}
ttk_style,selectbg {#4a6984}
ttk_style,selectfg {#ffffff}
