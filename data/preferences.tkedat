# If this option is set to 1, the interface will be setup to match the
# last, properly exited session.  If set to 0, an "Untitled" tab will
# appear in the interface, if no file was specified on the command-line.
# This option is only valid if no files were specified on the command-line.

{General/LoadLastSession}    {1}

# If this option is set to 1, the application will exit when the last tab
# is closed.  If this option is set to 0, closing the last tab will cause
# the application to remain open, creating a new "Untitled" tab.

{General/ExitOnLastClose}    {0}

# Specifies a list of variable/value pairs.  The specified variables will
# be added to the environment variables and may be used in any of the entry
# fields by preceding the variable name with a dollar sign.  This value is
# a Tcl list in the form of:
#
#   {variable_name value}
#
# A value may contain previously defined variables.

{General/Variables}          {}

# Specifies the window UI theme to use.  The valid values are:
#  - light
#  - dark

{General/WindowTheme}        {light}

# If set to a value of 1, a check for application updates will occur when the application
# is started.  A value of 0 will not perform the update check on start.

{General/UpdateCheckOnStart} {0}

# Setting this to a value of "devel" will update the application with any development releases.
# Setting this to a value of "stable" will only update the application with stable releases.  It
# is recommended that non-developers keep this value at "stable".  Setting it to "devel" may affect
# the tool stability.

{General/UpdateReleaseType} {stable}

# Specifies the current theme that is used in the code editor.  Each
# theme contains setting for syntax highlight coloring schemes, background
# color and selection background/foreground colors.  The following
# values are valid by default:
#  - Cool Glow
#  - Juicy
#  - Made of Code
#  - Monokai
#  - Notebook
#  - Ruby Blue
#  - choco
#  - default
#  - idleFingers
#  - minimal_Theme

{Appearance/Theme}           {default}

# Specifies which syntax highlighting elements should be colorized.  The following
# element names are valid:
#  - keywords
#  - comments
#  - strings
#  - numbers
#  - punctuation
#  - precompile
#  - miscellaneous1
#  - miscellaneous2
#  - miscellaneous3

{Appearance/Colorize}        {keywords comments strings numbers punctuation precompile miscellaneous1 miscellaneous2 miscellaneous3}

# Specifies the point size of the font used in the editor window

{Appearance/EditorFontSize}  {9}

# Specifies the point size of the font used in the command launcher entry field.

{Appearance/CommandLauncherEntryFontSize} {12}
  
# Specifies the point size of the font used in the command launcher preview field.

{Appearance/CommandLauncherPreviewFontSize} {6}

# If set to a value of 1, the command launcher will be positioned at the last position the
# command launcher was moved to.  If this value is 0, the command launcher will always be
# positioned approximately a quarter of the way down in the middle of the window regardless of
# its position being previously moved.

{Appearance/CommandLauncherRememberLastPosition} {1}
 
# Specifies the number of characters to allow on a line before additional characters
# are flagged with a warning character.

{Editor/WarningWidth}        {80}

# Specifies the number of spaces that will be inserted when the tab character is
# entered in edit mode.

{Editor/SpacesPerTab}        {2}

# If set to a value of 1, auto-indentation is enabled.  If set to a value of 0,
# disables auto-indentation feature.

{Editor/EnableAutoIndent}    {1}

# Contains a list of characters that the editor will automatically match when its matching
# opening character is inserted.  The valid values are as follows:
#   square - Inserts a matching square bracket ([])
#   curly  - Inserts a matching curly bracket ({})
#   angled - Inserts a matching angled bracket (<>)
#   paren  - Inserts a matching parenthesis (())
#   double - Inserts a matching double-quote (")
#   single - Inserts a matching single-quote (')

{Editor/AutoMatchChars}      {square curly angled paren double single}

# Specifies the number of spaces that will be automatically inserted when an
# auto-indent event occurs.

{Editor/IndentSpaces}        {2}

# If set to a value of 1, any trailing whitespace will automatically be removed on file save;
# otherwise, whitespace is preserved.

{Editor/RemoveTrailingWhitespace} {1}

# Specifies the maximum number of undo operations stored.  Set this value to 0 to get unlimited
# undo capability.

{Editor/MaxUndo}             {0}

# Specifies which characters will cause a snippet completion check to occur for characters
# immediately proceding the given character.  The valid values are:  space, tab, return

{Editor/SnippetCompleters}   {space tab return}

# When searching within a group of files (external to the current file), specifies
# the number of contextual lines that will be displayed above and below the
# matched line.

{Find/ContextNum}            {3}

# When using the "Jump Backward" or "Jump Forward" find functions, this value determines the
# minimum line distance to use to perform the jump.

{Find/JumpDistance}          {2}

# If this value is set to 1, the menubar will be displayed on application start,
# If this value is set to 0, the menubar will be hidden on application start.
# This option is only valid when not running as a Mac application.

{View/ShowMenubar}           {1}

# If this value is set to 1, the sidebar will be displayed on application start.
# If this value is set to 0, the sidebar will be hidden on application start.

{View/ShowSidebar}           {1}

# If this value is set to 1 and the console is supported on the current platform,
# the Tcl console window will be displayed on application start.

{View/ShowConsole}           {0}

# If this value is set to 1, the status bar will be displayed on application
# start; otherwise, the status bar will be hidden on application start.

{View/ShowStatusBar}         {1}

# If this value is set to 1, the tab bar will be displayed on application start;
# otherwise, the tab bar will be hidden on application start.

{View/ShowTabBar}            {1}

# If this value is set to 1, the line numbers will be displayed on application start;
# otherwise, the line numbers will be hidden on application start.

{View/ShowLineNumbers}       {1}

# If this value is set to 1, displaying a difference view of a file will automatically
# display it in the other editor pane.

{View/ShowDifferenceInOtherPane} {0}

# When the number of opened tabs in a notebook exceeds the number of tabs that can
# be readably displayed, a value of 1 will cause some of the tabs to be "hidden" from
# view, allowing their display via scrolling buttons and a dropdown menu.  If this
# value is set to 0, the tabs will simply be "squished" together such that all tabs
# will be visible in the notebook (though the content may not be completely visible).

{View/AllowTabScrolling}     {1}

# Displays the specified number of most recently opened directories and files each.
# This value can be set to any value between 0 and 20, inclusive.  A value of zero
# will disable the "Open Recent" menu item.

{View/ShowRecentlyOpened}    {10}

# When a new file is opened, if this option is set to 1, the new tab will be
# inserted in the tab bar in alphabetical order.  If this option is set to 0,
# the new tab will be added to the end of the tab bar.

{View/OpenTabsAlphabetically} {0}

# If a filename matches any of the patterns in the list, they will not be
# displayed in the sidebar.

{Sidebar/IgnoreFilePatterns} {}

# When a file is closed in the editor and the file was last opened file within
# a "rooted" directory in the sidebar, a value of 1 to this option will automatically
# remove the "rooted" directory from the sidebar browser; otherwise, a value of 0
# will keep the "rooted" directory and its contents in the browser.

{Sidebar/RemoveRootAfterLastClose} {0}

# If a directory contains subdirectories, this option (if set to 1) will display all
# of the subfolders at the top of the directory contents (subfolders will be sorted
# alphabetically) above other file contents.  If this value is set to 0, folders
# and files will be sorted together in alphabetical order.

{Sidebar/FoldersAtTop} {1}

# If this value is set to a value of 1, the application will start in Vim mode;
# otherwise, if the value is set to a value of 0, the application will start in
# normal mode.

{Tools/VimMode}              {0}

# Specifies the number of elements to keep in the clipboard history buffer.

{Tools/ClipboardHistoryDepth} {10}

# This option is only valid when we are running in developer mode.  Specifies
# how the profile report will be displayed.  Valid values are:
#  - calls
#  - FOOBAR

{Tools/ProfileReportSortby}  {calls}

# This option is only valid when we are running in developer mode.  Specifies
# any extra options to pass to the profile report generator mechanism.

{Tools/ProfileReportOptions} {}

# This option allows tke to modify the NFS mounted location of a file if tke is
# running on one machine and on another machine, the user calls tke with a new
# file to edit.  This option is a Tcl list in the form of:
#
#  {<hostname> {<NFS base directory> <remote base directory>}}
#
# <hostname> is the name of the full hostname of the remote machine (same name
# as running "info hostname" in a Tcl shell).
# <NFS base directory> is the pathname of the NFS mounted directory that matches
# the <remote base directory> directory on the remote machine.

{NFSMounts}                  {}

# If specified to a non-empty string, specifies an alternative directory to store
# any diagnostic output from the application.  If this value is set to the empty string,
# the default directory will be the ~/.tke/logs directory.

{Debug/LogDirectory}         {}
